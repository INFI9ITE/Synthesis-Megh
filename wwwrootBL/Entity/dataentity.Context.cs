//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wwwrootBL.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WestZoneEntities : DbContext
    {
        public WestZoneEntities()
            : base("name=WestZoneEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<QBConfig> QBConfigs { get; set; }
        public virtual DbSet<SiteConfiguration> SiteConfigurations { get; set; }
        public virtual DbSet<tbl_Activity_action> tbl_Activity_action { get; set; }
        public virtual DbSet<tbl_Activity_log> tbl_Activity_log { get; set; }
        public virtual DbSet<tbl_Department> tbl_Department { get; set; }
        public virtual DbSet<tbl_DepartmentNetSales> tbl_DepartmentNetSales { get; set; }
        public virtual DbSet<tbl_EmploymentStatus> tbl_EmploymentStatus { get; set; }
        public virtual DbSet<tbl_EmploymentType> tbl_EmploymentType { get; set; }
        public virtual DbSet<tbl_Gender> tbl_Gender { get; set; }
        public virtual DbSet<tbl_Invoice> tbl_Invoice { get; set; }
        public virtual DbSet<tbl_Invoice_Department> tbl_Invoice_Department { get; set; }
        public virtual DbSet<tbl_LogSummary> tbl_LogSummary { get; set; }
        public virtual DbSet<tbl_MaritalStatus> tbl_MaritalStatus { get; set; }
        public virtual DbSet<tbl_PaidOut> tbl_PaidOut { get; set; }
        public virtual DbSet<tbl_Pamentype> tbl_Pamentype { get; set; }
        public virtual DbSet<tbl_Status> tbl_Status { get; set; }
        public virtual DbSet<tbl_Store_Terminal> tbl_Store_Terminal { get; set; }
        public virtual DbSet<tbl_Type> tbl_Type { get; set; }
        public virtual DbSet<tbl_user> tbl_user { get; set; }
        public virtual DbSet<tbl_user_store> tbl_user_store { get; set; }
        public virtual DbSet<tbl_Vendor> tbl_Vendor { get; set; }
        public virtual DbSet<UserProfile> UserProfiles { get; set; }
        public virtual DbSet<Utility> Utilities { get; set; }
        public virtual DbSet<webpages_Membership> webpages_Membership { get; set; }
        public virtual DbSet<webpages_OAuthMembership> webpages_OAuthMembership { get; set; }
        public virtual DbSet<webpages_Roles> webpages_Roles { get; set; }
        public virtual DbSet<tbl_Store> tbl_Store { get; set; }
        public virtual DbSet<tbl_shift> tbl_shift { get; set; }
        public virtual DbSet<tbl_TendersInDrawer> tbl_TendersInDrawer { get; set; }
        public virtual DbSet<tbl_Creditcard_details> tbl_Creditcard_details { get; set; }
        public virtual DbSet<tbl_discounttype> tbl_discounttype { get; set; }
        public virtual DbSet<tbl_SalesActivitySummary> tbl_SalesActivitySummary { get; set; }
        public virtual DbSet<tbl_DeletedInvoiceHistory> tbl_DeletedInvoiceHistory { get; set; }
        public virtual DbSet<tbl_otherdeposit> tbl_otherdeposit { get; set; }
        public virtual DbSet<tbl_Option> tbl_Option { get; set; }
        public virtual DbSet<tbl_Payment_Method> tbl_Payment_Method { get; set; }
        public virtual DbSet<ExceptionHandlingLog> ExceptionHandlingLogs { get; set; }
        public virtual DbSet<tbl_ChildSalesEntries> tbl_ChildSalesEntries { get; set; }
        public virtual DbSet<tbl_SalesGeneralEntries> tbl_SalesGeneralEntries { get; set; }
        public virtual DbSet<tbl_SalesGeneralEntriesHistory> tbl_SalesGeneralEntriesHistory { get; set; }
        public virtual DbSet<tbl_ConfigureStatus> tbl_ConfigureStatus { get; set; }
        public virtual DbSet<Tbl_Configuration> Tbl_Configuration { get; set; }
        public virtual DbSet<tbl_GroupName> tbl_GroupName { get; set; }
        public virtual DbSet<tbl_TypicalBalance_master> tbl_TypicalBalance_master { get; set; }
        public virtual DbSet<tbl_Storewise_Excelupload> tbl_Storewise_Excelupload { get; set; }
        public virtual DbSet<tbl_ExcelRead> tbl_ExcelRead { get; set; }
        public virtual DbSet<tbl_Excelread_Errormsg> tbl_Excelread_Errormsg { get; set; }
        public virtual DbSet<tbl_DefaultAccount> tbl_DefaultAccount { get; set; }
    
        public virtual ObjectResult<BindBackofficemanager_Result> BindBackofficemanager()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindBackofficemanager_Result>("BindBackofficemanager");
        }
    
        public virtual ObjectResult<BindDataapproval_Result> BindDataapproval(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindDataapproval_Result>("BindDataapproval", idParameter);
        }
    
        public virtual int delete_multiple_userRole(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_multiple_userRole", useridParameter);
        }
    
        public virtual int delete_multiple_userstores(Nullable<int> reg_userid, Nullable<int> storeid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_multiple_userstores", reg_useridParameter, storeidParameter);
        }
    
        public virtual ObjectResult<Get_InvoiceNotification_Result> Get_InvoiceNotification(Nullable<int> userid, Nullable<int> store_id)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_InvoiceNotification_Result>("Get_InvoiceNotification", useridParameter, store_idParameter);
        }
    
        public virtual ObjectResult<Get_InvoiceNotification_Grid_Result> Get_InvoiceNotification_Grid(Nullable<int> userid, Nullable<int> store_id)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_InvoiceNotification_Grid_Result>("Get_InvoiceNotification_Grid", useridParameter, store_idParameter);
        }
    
        public virtual ObjectResult<Get_ReguserId_edit_Result> Get_ReguserId_edit(Nullable<int> storeid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ReguserId_edit_Result>("Get_ReguserId_edit", storeidParameter);
        }
    
        public virtual ObjectResult<Get_ReguserId_edit_dataapp_Result> Get_ReguserId_edit_dataapp(Nullable<int> storeid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ReguserId_edit_dataapp_Result>("Get_ReguserId_edit_dataapp", storeidParameter);
        }
    
        public virtual ObjectResult<Get_ReguserId_edit_Owner_Result> Get_ReguserId_edit_Owner(Nullable<int> storeid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ReguserId_edit_Owner_Result>("Get_ReguserId_edit_Owner", storeidParameter);
        }
    
        public virtual ObjectResult<Get_ReguserId_edit_storeman_Result> Get_ReguserId_edit_storeman(Nullable<int> storeid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_ReguserId_edit_storeman_Result>("Get_ReguserId_edit_storeman", storeidParameter);
        }
    
        public virtual ObjectResult<Get_roleid_rolename_byReg_userid_Result> Get_roleid_rolename_byReg_userid(Nullable<int> reg_userid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_roleid_rolename_byReg_userid_Result>("Get_roleid_rolename_byReg_userid", reg_useridParameter);
        }
    
        public virtual ObjectResult<string> GetEmailId(string role, Nullable<int> reg_userid)
        {
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetEmailId", roleParameter, reg_useridParameter);
        }
    
        public virtual ObjectResult<string> getrolebyusername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getrolebyusername", usernameParameter);
        }
    
        public virtual ObjectResult<GetRoleNameList_Result> GetRoleNameList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleNameList_Result>("GetRoleNameList");
        }
    
        public virtual ObjectResult<GetRoleNameListByUserId_Result> GetRoleNameListByUserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleNameListByUserId_Result>("GetRoleNameListByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<GetUser_dataApproval_Result> GetUser_dataApproval(Nullable<int> reg_userid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUser_dataApproval_Result>("GetUser_dataApproval", reg_useridParameter);
        }
    
        public virtual ObjectResult<getusernames_Result> getusernames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getusernames_Result>("getusernames");
        }
    
        public virtual int Membership_EnableUser(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Membership_EnableUser", useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Select_RoleId_ByUserid(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Select_RoleId_ByUserid", userIdParameter);
        }
    
        public virtual ObjectResult<SPDepartment_Result> SPDepartment(Nullable<int> spara, Nullable<int> storeID, Nullable<int> id, string name, string createdBy, string modifiedBy, Nullable<bool> isActive, string listID)
        {
            var sparaParameter = spara.HasValue ?
                new ObjectParameter("Spara", spara) :
                new ObjectParameter("Spara", typeof(int));
    
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPDepartment_Result>("SPDepartment", sparaParameter, storeIDParameter, idParameter, nameParameter, createdByParameter, modifiedByParameter, isActiveParameter, listIDParameter);
        }
    
        public virtual ObjectResult<SPInvoice_Result> SPInvoice(Nullable<int> spara, string txnID, Nullable<int> iD, Nullable<int> storeID)
        {
            var sparaParameter = spara.HasValue ?
                new ObjectParameter("Spara", spara) :
                new ObjectParameter("Spara", typeof(int));
    
            var txnIDParameter = txnID != null ?
                new ObjectParameter("TxnID", txnID) :
                new ObjectParameter("TxnID", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPInvoice_Result>("SPInvoice", sparaParameter, txnIDParameter, iDParameter, storeIDParameter);
        }
    
        public virtual ObjectResult<SPInvoiceDepartment_Result> SPInvoiceDepartment(Nullable<int> spara, Nullable<int> invoice_id)
        {
            var sparaParameter = spara.HasValue ?
                new ObjectParameter("Spara", spara) :
                new ObjectParameter("Spara", typeof(int));
    
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("Invoice_id", invoice_id) :
                new ObjectParameter("Invoice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPInvoiceDepartment_Result>("SPInvoiceDepartment", sparaParameter, invoice_idParameter);
        }
    
        public virtual int SPLogSummary(string spara, Nullable<int> id, string message, Nullable<System.DateTime> createdDate)
        {
            var sparaParameter = spara != null ?
                new ObjectParameter("Spara", spara) :
                new ObjectParameter("Spara", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPLogSummary", sparaParameter, idParameter, messageParameter, createdDateParameter);
        }
    
        public virtual ObjectResult<SPStore_Result> SPStore(Nullable<int> spara, Nullable<int> id, Nullable<int> store_Id, string companyFilePath, string qBVersion, string qBYear)
        {
            var sparaParameter = spara.HasValue ?
                new ObjectParameter("Spara", spara) :
                new ObjectParameter("Spara", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var store_IdParameter = store_Id.HasValue ?
                new ObjectParameter("Store_Id", store_Id) :
                new ObjectParameter("Store_Id", typeof(int));
    
            var companyFilePathParameter = companyFilePath != null ?
                new ObjectParameter("CompanyFilePath", companyFilePath) :
                new ObjectParameter("CompanyFilePath", typeof(string));
    
            var qBVersionParameter = qBVersion != null ?
                new ObjectParameter("QBVersion", qBVersion) :
                new ObjectParameter("QBVersion", typeof(string));
    
            var qBYearParameter = qBYear != null ?
                new ObjectParameter("QBYear", qBYear) :
                new ObjectParameter("QBYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPStore_Result>("SPStore", sparaParameter, idParameter, store_IdParameter, companyFilePathParameter, qBVersionParameter, qBYearParameter);
        }
    
        public virtual ObjectResult<SPVendor_Result> SPVendor(Nullable<int> spara, Nullable<int> id, Nullable<int> storeID, string name, string address, string companyName, string createdBy, string modifiedBy, Nullable<bool> isActive, string listID, string phoneNumber)
        {
            var sparaParameter = spara.HasValue ?
                new ObjectParameter("Spara", spara) :
                new ObjectParameter("Spara", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var storeIDParameter = storeID.HasValue ?
                new ObjectParameter("StoreID", storeID) :
                new ObjectParameter("StoreID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var listIDParameter = listID != null ?
                new ObjectParameter("ListID", listID) :
                new ObjectParameter("ListID", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPVendor_Result>("SPVendor", sparaParameter, idParameter, storeIDParameter, nameParameter, addressParameter, companyNameParameter, createdByParameter, modifiedByParameter, isActiveParameter, listIDParameter, phoneNumberParameter);
        }
    
        public virtual ObjectResult<tbl_Acivity_Log_GridData_Result> tbl_Acivity_Log_GridData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Acivity_Log_GridData_Result>("tbl_Acivity_Log_GridData");
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_Activity_log_Insert(Nullable<int> userid, string comment, string createdBy, Nullable<int> action)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_Activity_log_Insert", useridParameter, commentParameter, createdByParameter, actionParameter);
        }
    
        public virtual ObjectResult<tbl_DepartmentNetSalesbySalesActivityId_Result> tbl_DepartmentNetSalesbySalesActivityId(Nullable<int> activitySalesSummuryId)
        {
            var activitySalesSummuryIdParameter = activitySalesSummuryId.HasValue ?
                new ObjectParameter("ActivitySalesSummuryId", activitySalesSummuryId) :
                new ObjectParameter("ActivitySalesSummuryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_DepartmentNetSalesbySalesActivityId_Result>("tbl_DepartmentNetSalesbySalesActivityId", activitySalesSummuryIdParameter);
        }
    
        public virtual int tbl_Employee_GridData(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_Employee_GridData", nameParameter);
        }
    
        public virtual int tbl_Employee_Insert(string firstName, string lastName, string secondName, string name, Nullable<System.DateTime> birthday, string socSecurityNo, Nullable<int> genderid, Nullable<int> maritalStatusid, string photo, string empDoc, string empNote, string homePhone, string mobilePhone, string street, string aptSuiteBuilding, string city, string state, string zipCode, Nullable<System.DateTime> hireDate, Nullable<System.DateTime> terminationDate, Nullable<int> storeid, Nullable<int> deptid, Nullable<int> empTypeid, Nullable<int> empStatusId, string email, string userName, string password, string createdBy, Nullable<int> userid, Nullable<int> roleid, Nullable<int> reg_userid)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var secondNameParameter = secondName != null ?
                new ObjectParameter("SecondName", secondName) :
                new ObjectParameter("SecondName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var socSecurityNoParameter = socSecurityNo != null ?
                new ObjectParameter("SocSecurityNo", socSecurityNo) :
                new ObjectParameter("SocSecurityNo", typeof(string));
    
            var genderidParameter = genderid.HasValue ?
                new ObjectParameter("Genderid", genderid) :
                new ObjectParameter("Genderid", typeof(int));
    
            var maritalStatusidParameter = maritalStatusid.HasValue ?
                new ObjectParameter("MaritalStatusid", maritalStatusid) :
                new ObjectParameter("MaritalStatusid", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            var empDocParameter = empDoc != null ?
                new ObjectParameter("EmpDoc", empDoc) :
                new ObjectParameter("EmpDoc", typeof(string));
    
            var empNoteParameter = empNote != null ?
                new ObjectParameter("EmpNote", empNote) :
                new ObjectParameter("EmpNote", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("HomePhone", homePhone) :
                new ObjectParameter("HomePhone", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("MobilePhone", mobilePhone) :
                new ObjectParameter("MobilePhone", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var aptSuiteBuildingParameter = aptSuiteBuilding != null ?
                new ObjectParameter("AptSuiteBuilding", aptSuiteBuilding) :
                new ObjectParameter("AptSuiteBuilding", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var hireDateParameter = hireDate.HasValue ?
                new ObjectParameter("HireDate", hireDate) :
                new ObjectParameter("HireDate", typeof(System.DateTime));
    
            var terminationDateParameter = terminationDate.HasValue ?
                new ObjectParameter("TerminationDate", terminationDate) :
                new ObjectParameter("TerminationDate", typeof(System.DateTime));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("Deptid", deptid) :
                new ObjectParameter("Deptid", typeof(int));
    
            var empTypeidParameter = empTypeid.HasValue ?
                new ObjectParameter("EmpTypeid", empTypeid) :
                new ObjectParameter("EmpTypeid", typeof(int));
    
            var empStatusIdParameter = empStatusId.HasValue ?
                new ObjectParameter("EmpStatusId", empStatusId) :
                new ObjectParameter("EmpStatusId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("Roleid", roleid) :
                new ObjectParameter("Roleid", typeof(int));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_Employee_Insert", firstNameParameter, lastNameParameter, secondNameParameter, nameParameter, birthdayParameter, socSecurityNoParameter, genderidParameter, maritalStatusidParameter, photoParameter, empDocParameter, empNoteParameter, homePhoneParameter, mobilePhoneParameter, streetParameter, aptSuiteBuildingParameter, cityParameter, stateParameter, zipCodeParameter, hireDateParameter, terminationDateParameter, storeidParameter, deptidParameter, empTypeidParameter, empStatusIdParameter, emailParameter, userNameParameter, passwordParameter, createdByParameter, useridParameter, roleidParameter, reg_useridParameter);
        }
    
        public virtual int tbl_Employee_store_Insert(Nullable<int> storeid, Nullable<int> userid, Nullable<int> reg_userid, string storeName, Nullable<int> roleId, string roleName)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            var storeNameParameter = storeName != null ?
                new ObjectParameter("StoreName", storeName) :
                new ObjectParameter("StoreName", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_Employee_store_Insert", storeidParameter, useridParameter, reg_useridParameter, storeNameParameter, roleIdParameter, roleNameParameter);
        }
    
        public virtual int tbl_Employee_Update(Nullable<int> id, string firstName, string lastName, string secondName, string name, Nullable<System.DateTime> birthday, string socSecurityNo, Nullable<int> genderid, Nullable<int> maritalStatusid, string photo, string empDoc, string empNote, string homePhone, string mobilePhone, string street, string aptSuiteBuilding, string city, string state, string zipCode, Nullable<System.DateTime> hireDate, Nullable<System.DateTime> terminationDate, Nullable<int> storeid, Nullable<int> deptid, Nullable<int> empTypeid, Nullable<int> empStatusId, string email, string userName, string password, string modifiedBy, Nullable<int> userid, Nullable<int> roleid, Nullable<int> reg_userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var secondNameParameter = secondName != null ?
                new ObjectParameter("SecondName", secondName) :
                new ObjectParameter("SecondName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var socSecurityNoParameter = socSecurityNo != null ?
                new ObjectParameter("SocSecurityNo", socSecurityNo) :
                new ObjectParameter("SocSecurityNo", typeof(string));
    
            var genderidParameter = genderid.HasValue ?
                new ObjectParameter("Genderid", genderid) :
                new ObjectParameter("Genderid", typeof(int));
    
            var maritalStatusidParameter = maritalStatusid.HasValue ?
                new ObjectParameter("MaritalStatusid", maritalStatusid) :
                new ObjectParameter("MaritalStatusid", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            var empDocParameter = empDoc != null ?
                new ObjectParameter("EmpDoc", empDoc) :
                new ObjectParameter("EmpDoc", typeof(string));
    
            var empNoteParameter = empNote != null ?
                new ObjectParameter("EmpNote", empNote) :
                new ObjectParameter("EmpNote", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("HomePhone", homePhone) :
                new ObjectParameter("HomePhone", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("MobilePhone", mobilePhone) :
                new ObjectParameter("MobilePhone", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var aptSuiteBuildingParameter = aptSuiteBuilding != null ?
                new ObjectParameter("AptSuiteBuilding", aptSuiteBuilding) :
                new ObjectParameter("AptSuiteBuilding", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var hireDateParameter = hireDate.HasValue ?
                new ObjectParameter("HireDate", hireDate) :
                new ObjectParameter("HireDate", typeof(System.DateTime));
    
            var terminationDateParameter = terminationDate.HasValue ?
                new ObjectParameter("TerminationDate", terminationDate) :
                new ObjectParameter("TerminationDate", typeof(System.DateTime));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("Deptid", deptid) :
                new ObjectParameter("Deptid", typeof(int));
    
            var empTypeidParameter = empTypeid.HasValue ?
                new ObjectParameter("EmpTypeid", empTypeid) :
                new ObjectParameter("EmpTypeid", typeof(int));
    
            var empStatusIdParameter = empStatusId.HasValue ?
                new ObjectParameter("EmpStatusId", empStatusId) :
                new ObjectParameter("EmpStatusId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("Roleid", roleid) :
                new ObjectParameter("Roleid", typeof(int));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_Employee_Update", idParameter, firstNameParameter, lastNameParameter, secondNameParameter, nameParameter, birthdayParameter, socSecurityNoParameter, genderidParameter, maritalStatusidParameter, photoParameter, empDocParameter, empNoteParameter, homePhoneParameter, mobilePhoneParameter, streetParameter, aptSuiteBuildingParameter, cityParameter, stateParameter, zipCodeParameter, hireDateParameter, terminationDateParameter, storeidParameter, deptidParameter, empTypeidParameter, empStatusIdParameter, emailParameter, userNameParameter, passwordParameter, modifiedByParameter, useridParameter, roleidParameter, reg_useridParameter);
        }
    
        public virtual ObjectResult<tbl_Invoice_Dashbord_GridData_Result> tbl_Invoice_Dashbord_GridData(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string payment_type, Nullable<int> dept_id, Nullable<int> store_id, string searchdashbord, Nullable<decimal> amtMaximum, Nullable<decimal> amtMinimum, Nullable<int> pageindex)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var searchdashbordParameter = searchdashbord != null ?
                new ObjectParameter("searchdashbord", searchdashbord) :
                new ObjectParameter("searchdashbord", typeof(string));
    
            var amtMaximumParameter = amtMaximum.HasValue ?
                new ObjectParameter("AmtMaximum", amtMaximum) :
                new ObjectParameter("AmtMaximum", typeof(decimal));
    
            var amtMinimumParameter = amtMinimum.HasValue ?
                new ObjectParameter("AmtMinimum", amtMinimum) :
                new ObjectParameter("AmtMinimum", typeof(decimal));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Invoice_Dashbord_GridData_Result>("tbl_Invoice_Dashbord_GridData", startdateParameter, enddateParameter, payment_typeParameter, dept_idParameter, store_idParameter, searchdashbordParameter, amtMaximumParameter, amtMinimumParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<tbl_Invoice_Dashbord_GridData_DataApp_Result> tbl_Invoice_Dashbord_GridData_DataApp(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string payment_type, Nullable<int> dept_id, Nullable<int> store_id, string searchdashbord)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var searchdashbordParameter = searchdashbord != null ?
                new ObjectParameter("searchdashbord", searchdashbord) :
                new ObjectParameter("searchdashbord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Invoice_Dashbord_GridData_DataApp_Result>("tbl_Invoice_Dashbord_GridData_DataApp", startdateParameter, enddateParameter, payment_typeParameter, dept_idParameter, store_idParameter, searchdashbordParameter);
        }
    
        public virtual ObjectResult<tbl_Invoice_Dashbord_GridData_StoreManager_Result> tbl_Invoice_Dashbord_GridData_StoreManager(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string payment_type, Nullable<int> dept_id, Nullable<int> store_id, string searchdashbord)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var searchdashbordParameter = searchdashbord != null ?
                new ObjectParameter("searchdashbord", searchdashbord) :
                new ObjectParameter("searchdashbord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Invoice_Dashbord_GridData_StoreManager_Result>("tbl_Invoice_Dashbord_GridData_StoreManager", startdateParameter, enddateParameter, payment_typeParameter, dept_idParameter, store_idParameter, searchdashbordParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_Invoice_Department_Insert(Nullable<int> invoice_id, Nullable<int> dept_id, Nullable<decimal> amount, string createdBy, Nullable<System.DateTime> invoice_Date, string invoice_Number, Nullable<decimal> totalamount)
        {
            var invoice_idParameter = invoice_id.HasValue ?
                new ObjectParameter("Invoice_id", invoice_id) :
                new ObjectParameter("Invoice_id", typeof(int));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var totalamountParameter = totalamount.HasValue ?
                new ObjectParameter("totalamount", totalamount) :
                new ObjectParameter("totalamount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_Invoice_Department_Insert", invoice_idParameter, dept_idParameter, amountParameter, createdByParameter, invoice_DateParameter, invoice_NumberParameter, totalamountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> tbl_Invoice_exists_InNo(string invoice_Number, Nullable<decimal> totalamount, Nullable<System.DateTime> invoicedate)
        {
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var totalamountParameter = totalamount.HasValue ?
                new ObjectParameter("totalamount", totalamount) :
                new ObjectParameter("totalamount", typeof(decimal));
    
            var invoicedateParameter = invoicedate.HasValue ?
                new ObjectParameter("invoicedate", invoicedate) :
                new ObjectParameter("invoicedate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("tbl_Invoice_exists_InNo", invoice_NumberParameter, totalamountParameter, invoicedateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> tbl_Invoice_exists_InNo_Edit(Nullable<int> id, string invoice_Number, Nullable<decimal> totalamount, Nullable<System.DateTime> invoicedate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var totalamountParameter = totalamount.HasValue ?
                new ObjectParameter("totalamount", totalamount) :
                new ObjectParameter("totalamount", typeof(decimal));
    
            var invoicedateParameter = invoicedate.HasValue ?
                new ObjectParameter("invoicedate", invoicedate) :
                new ObjectParameter("invoicedate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("tbl_Invoice_exists_InNo_Edit", idParameter, invoice_NumberParameter, totalamountParameter, invoicedateParameter);
        }
    
        public virtual ObjectResult<tbl_PaidOutbySalesActivityId_Result> tbl_PaidOutbySalesActivityId(Nullable<int> activitySalesSummuryId)
        {
            var activitySalesSummuryIdParameter = activitySalesSummuryId.HasValue ?
                new ObjectParameter("ActivitySalesSummuryId", activitySalesSummuryId) :
                new ObjectParameter("ActivitySalesSummuryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_PaidOutbySalesActivityId_Result>("tbl_PaidOutbySalesActivityId", activitySalesSummuryIdParameter);
        }
    
        public virtual ObjectResult<tbl_SalesActivitySummary_Excelread_exists_Result> tbl_SalesActivitySummary_Excelread_exists(Nullable<System.DateTime> transactionStartTime, Nullable<int> terminalid, Nullable<int> storeid)
        {
            var transactionStartTimeParameter = transactionStartTime.HasValue ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(System.DateTime));
    
            var terminalidParameter = terminalid.HasValue ?
                new ObjectParameter("Terminalid", terminalid) :
                new ObjectParameter("Terminalid", typeof(int));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_SalesActivitySummary_Excelread_exists_Result>("tbl_SalesActivitySummary_Excelread_exists", transactionStartTimeParameter, terminalidParameter, storeidParameter);
        }
    
        public virtual ObjectResult<tbl_store_byid_Result> tbl_store_byid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_store_byid_Result>("tbl_store_byid", idParameter);
        }
    
        public virtual ObjectResult<tbl_Store_exists_Result> tbl_Store_exists(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Store_exists_Result>("tbl_Store_exists", nameParameter);
        }
    
        public virtual ObjectResult<tbl_Store_GridData_Result> tbl_Store_GridData(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Store_GridData_Result>("tbl_Store_GridData", nameParameter);
        }
    
        public virtual ObjectResult<tbl_Store_Terminal_byid_Result> tbl_Store_Terminal_byid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Store_Terminal_byid_Result>("tbl_Store_Terminal_byid", idParameter);
        }
    
        public virtual ObjectResult<tbl_Store_Terminal_Select_Result> tbl_Store_Terminal_Select(Nullable<int> storeid, string terminal)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var terminalParameter = terminal != null ?
                new ObjectParameter("Terminal", terminal) :
                new ObjectParameter("Terminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Store_Terminal_Select_Result>("tbl_Store_Terminal_Select", storeidParameter, terminalParameter);
        }
    
        public virtual ObjectResult<tbl_tbl_Store_Terminal_exists_Result> tbl_tbl_Store_Terminal_exists(string terminal, Nullable<int> storeid)
        {
            var terminalParameter = terminal != null ?
                new ObjectParameter("Terminal", terminal) :
                new ObjectParameter("Terminal", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_tbl_Store_Terminal_exists_Result>("tbl_tbl_Store_Terminal_exists", terminalParameter, storeidParameter);
        }
    
        public virtual ObjectResult<tbl_tbl_Store_Terminal_existsbyid_Result> tbl_tbl_Store_Terminal_existsbyid(Nullable<int> id, string terminal, Nullable<int> storeid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var terminalParameter = terminal != null ?
                new ObjectParameter("Terminal", terminal) :
                new ObjectParameter("Terminal", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_tbl_Store_Terminal_existsbyid_Result>("tbl_tbl_Store_Terminal_existsbyid", idParameter, terminalParameter, storeidParameter);
        }
    
        public virtual ObjectResult<tbl_TendersInDrawerbySalesActivityId_Result> tbl_TendersInDrawerbySalesActivityId(Nullable<int> activitySalesSummuryId)
        {
            var activitySalesSummuryIdParameter = activitySalesSummuryId.HasValue ?
                new ObjectParameter("ActivitySalesSummuryId", activitySalesSummuryId) :
                new ObjectParameter("ActivitySalesSummuryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_TendersInDrawerbySalesActivityId_Result>("tbl_TendersInDrawerbySalesActivityId", activitySalesSummuryIdParameter);
        }
    
        public virtual ObjectResult<tbl_user_backoffice_Result> tbl_user_backoffice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_backoffice_Result>("tbl_user_backoffice");
        }
    
        public virtual ObjectResult<tbl_user_backoffice_edit_Result> tbl_user_backoffice_edit(Nullable<int> reg_userid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_backoffice_edit_Result>("tbl_user_backoffice_edit", reg_useridParameter);
        }
    
        public virtual ObjectResult<tbl_user_backoffice_edit_new_Result> tbl_user_backoffice_edit_new(Nullable<int> reg_userid, Nullable<int> roleid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("Roleid", roleid) :
                new ObjectParameter("Roleid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_backoffice_edit_new_Result>("tbl_user_backoffice_edit_new", reg_useridParameter, roleidParameter);
        }
    
        public virtual ObjectResult<tbl_user_byid_Result> tbl_user_byid(Nullable<int> reg_userid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_byid_Result>("tbl_user_byid", reg_useridParameter);
        }
    
        public virtual ObjectResult<tbl_user_DataApprover_Result> tbl_user_DataApprover()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_DataApprover_Result>("tbl_user_DataApprover");
        }
    
        public virtual ObjectResult<tbl_user_DataApprover_edit_Result> tbl_user_DataApprover_edit(Nullable<int> reg_userid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_DataApprover_edit_Result>("tbl_user_DataApprover_edit", reg_useridParameter);
        }
    
        public virtual ObjectResult<tbl_user_GridData_Result> tbl_user_GridData(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_GridData_Result>("tbl_user_GridData", nameParameter);
        }
    
        public virtual ObjectResult<tbl_user_GridData_byid_Result> tbl_user_GridData_byid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_GridData_byid_Result>("tbl_user_GridData_byid", idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_user_Insert(string name, string email, string userName, string password, string createdBy, Nullable<int> userid, Nullable<int> roleid, Nullable<int> reg_userid)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("Roleid", roleid) :
                new ObjectParameter("Roleid", typeof(int));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_user_Insert", nameParameter, emailParameter, userNameParameter, passwordParameter, createdByParameter, useridParameter, roleidParameter, reg_useridParameter);
        }
    
        public virtual ObjectResult<tbl_user_name_Result> tbl_user_name(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_name_Result>("tbl_user_name", useridParameter);
        }
    
        public virtual ObjectResult<tbl_user_Owner_Result> tbl_user_Owner()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_Owner_Result>("tbl_user_Owner");
        }
    
        public virtual ObjectResult<tbl_user_Owner_edit_Result> tbl_user_Owner_edit(Nullable<int> reg_userid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_Owner_edit_Result>("tbl_user_Owner_edit", reg_useridParameter);
        }
    
        public virtual ObjectResult<tbl_user_Selectstore_Result> tbl_user_Selectstore()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_Selectstore_Result>("tbl_user_Selectstore");
        }
    
        public virtual ObjectResult<tbl_user_Selectstore_Admin_Result> tbl_user_Selectstore_Admin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_Selectstore_Admin_Result>("tbl_user_Selectstore_Admin");
        }
    
        public virtual ObjectResult<tbl_user_store_By_Reg_userid_Result> tbl_user_store_By_Reg_userid(Nullable<int> reg_userid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_store_By_Reg_userid_Result>("tbl_user_store_By_Reg_userid", reg_useridParameter);
        }
    
        public virtual int tbl_user_store_delete(Nullable<int> storeid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_user_store_delete", storeidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_user_store_Insert(Nullable<int> userid, string storeName, Nullable<int> reg_userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var storeNameParameter = storeName != null ?
                new ObjectParameter("StoreName", storeName) :
                new ObjectParameter("StoreName", typeof(string));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_user_store_Insert", useridParameter, storeNameParameter, reg_useridParameter);
        }
    
        public virtual int tbl_user_store_Insert_BackOfficeMan(Nullable<int> storeid, Nullable<int> userid, Nullable<int> reg_userid, string storeName, Nullable<int> roleId, string roleName)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            var storeNameParameter = storeName != null ?
                new ObjectParameter("StoreName", storeName) :
                new ObjectParameter("StoreName", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_user_store_Insert_BackOfficeMan", storeidParameter, useridParameter, reg_useridParameter, storeNameParameter, roleIdParameter, roleNameParameter);
        }
    
        public virtual int tbl_user_store_Insert_DataApp(Nullable<int> storeid, Nullable<int> userid, Nullable<int> reg_userid, string storeName, Nullable<int> roleId, string roleName)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            var storeNameParameter = storeName != null ?
                new ObjectParameter("StoreName", storeName) :
                new ObjectParameter("StoreName", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_user_store_Insert_DataApp", storeidParameter, useridParameter, reg_useridParameter, storeNameParameter, roleIdParameter, roleNameParameter);
        }
    
        public virtual int tbl_user_store_Insert_Owner(Nullable<int> storeid, Nullable<int> userid, Nullable<int> reg_userid, string storeName, Nullable<int> roleId, string roleName)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            var storeNameParameter = storeName != null ?
                new ObjectParameter("StoreName", storeName) :
                new ObjectParameter("StoreName", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_user_store_Insert_Owner", storeidParameter, useridParameter, reg_useridParameter, storeNameParameter, roleIdParameter, roleNameParameter);
        }
    
        public virtual int tbl_user_store_Insert_StoreMan(Nullable<int> storeid, Nullable<int> userid, Nullable<int> reg_userid, string storeName, Nullable<int> roleId, string roleName)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            var storeNameParameter = storeName != null ?
                new ObjectParameter("StoreName", storeName) :
                new ObjectParameter("StoreName", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_user_store_Insert_StoreMan", storeidParameter, useridParameter, reg_useridParameter, storeNameParameter, roleIdParameter, roleNameParameter);
        }
    
        public virtual ObjectResult<string> tbl_user_store_select_StorebyUser(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("tbl_user_store_select_StorebyUser", useridParameter);
        }
    
        public virtual ObjectResult<tbl_user_Storemanager_Result> tbl_user_Storemanager()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_Storemanager_Result>("tbl_user_Storemanager");
        }
    
        public virtual ObjectResult<tbl_user_Storemanager_edit_Result> tbl_user_Storemanager_edit(Nullable<int> reg_userid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_user_Storemanager_edit_Result>("tbl_user_Storemanager_edit", reg_useridParameter);
        }
    
        public virtual int Update_Employee_Password(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Employee_Password", userNameParameter, passwordParameter);
        }
    
        public virtual int Update_tbl_user_Password(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_tbl_user_Password", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> webpages_Roles_byRolename(string roleName)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("webpages_Roles_byRolename", roleNameParameter);
        }
    
        public virtual ObjectResult<Unsetteled_Invoice_Administrator_Result> Unsetteled_Invoice_Administrator(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string payment_type, Nullable<int> dept_id, Nullable<int> store_id, string searchdashbord, Nullable<int> createdBy)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var searchdashbordParameter = searchdashbord != null ?
                new ObjectParameter("searchdashbord", searchdashbord) :
                new ObjectParameter("searchdashbord", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Unsetteled_Invoice_Administrator_Result>("Unsetteled_Invoice_Administrator", startdateParameter, enddateParameter, payment_typeParameter, dept_idParameter, store_idParameter, searchdashbordParameter, createdByParameter);
        }
    
        public virtual ObjectResult<tbl_DayClosereportGrid_Result> tbl_DayClosereportGrid(Nullable<System.DateTime> transactionStartTime, Nullable<System.DateTime> transactionEndTime, Nullable<int> storeid)
        {
            var transactionStartTimeParameter = transactionStartTime.HasValue ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(System.DateTime));
    
            var transactionEndTimeParameter = transactionEndTime.HasValue ?
                new ObjectParameter("TransactionEndTime", transactionEndTime) :
                new ObjectParameter("TransactionEndTime", typeof(System.DateTime));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_DayClosereportGrid_Result>("tbl_DayClosereportGrid", transactionStartTimeParameter, transactionEndTimeParameter, storeidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_Store_Create(string name, string address, string storeNo, string faxNo, string createdBy, string address2, string emailId, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var storeNoParameter = storeNo != null ?
                new ObjectParameter("StoreNo", storeNo) :
                new ObjectParameter("StoreNo", typeof(string));
    
            var faxNoParameter = faxNo != null ?
                new ObjectParameter("FaxNo", faxNo) :
                new ObjectParameter("FaxNo", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_Store_Create", nameParameter, addressParameter, storeNoParameter, faxNoParameter, createdByParameter, address2Parameter, emailIdParameter, passwordParameter);
        }
    
        public virtual int tbl_Store_Update(Nullable<int> id, string name, string address, string storeNo, string faxNo, string modifiedBy, string address2, string emailId, string password)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var storeNoParameter = storeNo != null ?
                new ObjectParameter("StoreNo", storeNo) :
                new ObjectParameter("StoreNo", typeof(string));
    
            var faxNoParameter = faxNo != null ?
                new ObjectParameter("FaxNo", faxNo) :
                new ObjectParameter("FaxNo", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_Store_Update", idParameter, nameParameter, addressParameter, storeNoParameter, faxNoParameter, modifiedByParameter, address2Parameter, emailIdParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_Storewise_Excelupload_insert(Nullable<int> storeid, string filename)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_Storewise_Excelupload_insert", storeidParameter, filenameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> StoreIdListFromUserId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("StoreIdListFromUserId", idParameter);
        }
    
        public virtual ObjectResult<tbl_Store_Emailexists_Result> tbl_Store_Emailexists(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Store_Emailexists_Result>("tbl_Store_Emailexists", emailParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_Store_Terminal_Insert(Nullable<int> storeid, string terminal, string createdBy)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var terminalParameter = terminal != null ?
                new ObjectParameter("Terminal", terminal) :
                new ObjectParameter("Terminal", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_Store_Terminal_Insert", storeidParameter, terminalParameter, createdByParameter);
        }
    
        public virtual ObjectResult<tbl_SalesActivitySummary_bystoreid_Result> tbl_SalesActivitySummary_bystoreid(Nullable<int> storeid, Nullable<System.DateTime> transactionStartTime)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime.HasValue ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_SalesActivitySummary_bystoreid_Result>("tbl_SalesActivitySummary_bystoreid", storeidParameter, transactionStartTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetCustomercount(Nullable<System.DateTime> transactionStartTime, Nullable<int> storeid, Nullable<int> terminalid)
        {
            var transactionStartTimeParameter = transactionStartTime.HasValue ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(System.DateTime));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var terminalidParameter = terminalid.HasValue ?
                new ObjectParameter("terminalid", terminalid) :
                new ObjectParameter("terminalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetCustomercount", transactionStartTimeParameter, storeidParameter, terminalidParameter);
        }
    
        public virtual int tbl_SalesActivitySummary_updatecashiername(Nullable<int> id, string shiftname, string cashiername)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var shiftnameParameter = shiftname != null ?
                new ObjectParameter("shiftname", shiftname) :
                new ObjectParameter("shiftname", typeof(string));
    
            var cashiernameParameter = cashiername != null ?
                new ObjectParameter("cashiername", cashiername) :
                new ObjectParameter("cashiername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_SalesActivitySummary_updatecashiername", idParameter, shiftnameParameter, cashiernameParameter);
        }
    
        public virtual ObjectResult<tbl_tenderinDraw_byid_Result> tbl_tenderinDraw_byid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_tenderinDraw_byid_Result>("tbl_tenderinDraw_byid", idParameter);
        }
    
        public virtual ObjectResult<tbl_SalesActivitySummary_Terminalwiselist_Result> tbl_SalesActivitySummary_Terminalwiselist(Nullable<int> storeid, string transactionStartTime)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_SalesActivitySummary_Terminalwiselist_Result>("tbl_SalesActivitySummary_Terminalwiselist", storeidParameter, transactionStartTimeParameter);
        }
    
        public virtual ObjectResult<tbl_SalesActivitySummary_shiftlist_Result> tbl_SalesActivitySummary_shiftlist(Nullable<int> storeid, string transactionStartTime, Nullable<int> terminalid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var terminalidParameter = terminalid.HasValue ?
                new ObjectParameter("terminalid", terminalid) :
                new ObjectParameter("terminalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_SalesActivitySummary_shiftlist_Result>("tbl_SalesActivitySummary_shiftlist", storeidParameter, transactionStartTimeParameter, terminalidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_Storewise_Excelupload_insertData(Nullable<int> storeid, string filename, string date)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_Storewise_Excelupload_insertData", storeidParameter, filenameParameter, dateParameter);
        }
    
        public virtual int tbl_TendersInDrawer_updateAmount(Nullable<int> id, Nullable<decimal> amount)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_TendersInDrawer_updateAmount", idParameter, amountParameter);
        }
    
        public virtual ObjectResult<GetSalesamount_byterminal_Result> GetSalesamount_byterminal(string transactionStartTime, Nullable<int> storeid)
        {
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesamount_byterminal_Result>("GetSalesamount_byterminal", transactionStartTimeParameter, storeidParameter);
        }
    
        public virtual ObjectResult<tbl_SalesActivitySummary_Terminalwiselistbytid_Result> tbl_SalesActivitySummary_Terminalwiselistbytid(Nullable<int> storeid, string transactionStartTime, Nullable<int> terminalid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var terminalidParameter = terminalid.HasValue ?
                new ObjectParameter("terminalid", terminalid) :
                new ObjectParameter("terminalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_SalesActivitySummary_Terminalwiselistbytid_Result>("tbl_SalesActivitySummary_Terminalwiselistbytid", storeidParameter, transactionStartTimeParameter, terminalidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Insert_tbl_TendersInDrawer(string name, Nullable<decimal> amount, Nullable<int> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Insert_tbl_TendersInDrawer", nameParameter, amountParameter, idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> tbl_Invoice_exists_InNo_New(string invoice_Number, Nullable<System.DateTime> invoicedate, Nullable<int> storeid, Nullable<int> typeid, Nullable<int> vendorid)
        {
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var invoicedateParameter = invoicedate.HasValue ?
                new ObjectParameter("invoicedate", invoicedate) :
                new ObjectParameter("invoicedate", typeof(System.DateTime));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var typeidParameter = typeid.HasValue ?
                new ObjectParameter("typeid", typeid) :
                new ObjectParameter("typeid", typeof(int));
    
            var vendoridParameter = vendorid.HasValue ?
                new ObjectParameter("vendorid", vendorid) :
                new ObjectParameter("vendorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("tbl_Invoice_exists_InNo_New", invoice_NumberParameter, invoicedateParameter, storeidParameter, typeidParameter, vendoridParameter);
        }
    
        public virtual ObjectResult<GetCashTotal_Result> GetCashTotal(Nullable<int> storeId, string transactionStartTime, string transactionEndTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var transactionEndTimeParameter = transactionEndTime != null ?
                new ObjectParameter("TransactionEndTime", transactionEndTime) :
                new ObjectParameter("TransactionEndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCashTotal_Result>("GetCashTotal", storeIdParameter, transactionStartTimeParameter, transactionEndTimeParameter);
        }
    
        public virtual ObjectResult<GetOtherTotal_Result> GetOtherTotal(Nullable<int> storeId, string transactionStartTime, string transactionEndTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var transactionEndTimeParameter = transactionEndTime != null ?
                new ObjectParameter("TransactionEndTime", transactionEndTime) :
                new ObjectParameter("TransactionEndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOtherTotal_Result>("GetOtherTotal", storeIdParameter, transactionStartTimeParameter, transactionEndTimeParameter);
        }
    
        public virtual ObjectResult<GetShiftWiseTotal_Result> GetShiftWiseTotal(Nullable<int> storeId, string shiftName, string transactionStartTime, string transactionEndTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var transactionEndTimeParameter = transactionEndTime != null ?
                new ObjectParameter("TransactionEndTime", transactionEndTime) :
                new ObjectParameter("TransactionEndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetShiftWiseTotal_Result>("GetShiftWiseTotal", storeIdParameter, shiftNameParameter, transactionStartTimeParameter, transactionEndTimeParameter);
        }
    
        public virtual ObjectResult<GetTitleList_Result> GetTitleList(Nullable<int> storeId, string transactionStartTime, string transactionEndTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var transactionEndTimeParameter = transactionEndTime != null ?
                new ObjectParameter("TransactionEndTime", transactionEndTime) :
                new ObjectParameter("TransactionEndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTitleList_Result>("GetTitleList", storeIdParameter, transactionStartTimeParameter, transactionEndTimeParameter);
        }
    
        public virtual ObjectResult<GetTitleWiseTotal_Result> GetTitleWiseTotal(Nullable<int> storeId, string shiftName, string title, string transactionStartTime, string transactionEndTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var transactionEndTimeParameter = transactionEndTime != null ?
                new ObjectParameter("TransactionEndTime", transactionEndTime) :
                new ObjectParameter("TransactionEndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTitleWiseTotal_Result>("GetTitleWiseTotal", storeIdParameter, shiftNameParameter, titleParameter, transactionStartTimeParameter, transactionEndTimeParameter);
        }
    
        public virtual int tbl_Storewise_Excelupload_updateissync(Nullable<int> id, Nullable<int> issync)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var issyncParameter = issync.HasValue ?
                new ObjectParameter("Issync", issync) :
                new ObjectParameter("Issync", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_Storewise_Excelupload_updateissync", idParameter, issyncParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckExistence_byshiftwise(Nullable<int> storeid, string date, Nullable<int> terminalid, Nullable<int> id, string shiftname)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var terminalidParameter = terminalid.HasValue ?
                new ObjectParameter("terminalid", terminalid) :
                new ObjectParameter("terminalid", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var shiftnameParameter = shiftname != null ?
                new ObjectParameter("shiftname", shiftname) :
                new ObjectParameter("shiftname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckExistence_byshiftwise", storeidParameter, dateParameter, terminalidParameter, idParameter, shiftnameParameter);
        }
    
        public virtual ObjectResult<tbl_SalesActivitySummary_Terminallist_Result> tbl_SalesActivitySummary_Terminallist(Nullable<int> storeid, Nullable<System.DateTime> transactionStartTime, Nullable<System.DateTime> transactionEndTime)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime.HasValue ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(System.DateTime));
    
            var transactionEndTimeParameter = transactionEndTime.HasValue ?
                new ObjectParameter("TransactionEndTime", transactionEndTime) :
                new ObjectParameter("TransactionEndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_SalesActivitySummary_Terminallist_Result>("tbl_SalesActivitySummary_Terminallist", storeidParameter, transactionStartTimeParameter, transactionEndTimeParameter);
        }
    
        public virtual ObjectResult<GetShiftWiseGrandTotal_Result> GetShiftWiseGrandTotal(Nullable<int> storeId, string shiftName, string transactionStartTime, string transactionEndTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var transactionEndTimeParameter = transactionEndTime != null ?
                new ObjectParameter("TransactionEndTime", transactionEndTime) :
                new ObjectParameter("TransactionEndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetShiftWiseGrandTotal_Result>("GetShiftWiseGrandTotal", storeIdParameter, shiftNameParameter, transactionStartTimeParameter, transactionEndTimeParameter);
        }
    
        public virtual ObjectResult<checkterminalwiseshift_Result> checkterminalwiseshift(Nullable<int> id, Nullable<int> tid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tidParameter = tid.HasValue ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkterminalwiseshift_Result>("checkterminalwiseshift", idParameter, tidParameter);
        }
    
        public virtual int DeleteFromtbl_DepartmentNetSales(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFromtbl_DepartmentNetSales", idParameter);
        }
    
        public virtual int DeleteFromtbl_Excelread_Errormsg(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFromtbl_Excelread_Errormsg", idParameter);
        }
    
        public virtual int DeleteFromtbl_PaidOut(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFromtbl_PaidOut", idParameter);
        }
    
        public virtual int DeleteFromtbl_Storewise_Excelupload(string filename)
        {
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFromtbl_Storewise_Excelupload", filenameParameter);
        }
    
        public virtual int DeleteFromtbl_TendersInDrawer(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFromtbl_TendersInDrawer", idParameter);
        }
    
        public virtual ObjectResult<GetSyncwiselist_Result> GetSyncwiselist(Nullable<int> store_id)
        {
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSyncwiselist_Result>("GetSyncwiselist", store_idParameter);
        }
    
        public virtual ObjectResult<GetCreditCardDetails_Result> GetCreditCardDetails(Nullable<int> storeid, Nullable<int> shiftId, string date)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("ShiftId", shiftId) :
                new ObjectParameter("ShiftId", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCreditCardDetails_Result>("GetCreditCardDetails", storeidParameter, shiftIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<GetCreditcard_details_AMEX_Result> GetCreditcard_details_AMEX(Nullable<int> storeId, string shiftName, string startTime, string endTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(int));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCreditcard_details_AMEX_Result>("GetCreditcard_details_AMEX", storeIdParameter, shiftNameParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetCreditcard_details_Discover_Result> GetCreditcard_details_Discover(Nullable<int> storeId, string shiftName, string startTime, string endTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(int));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCreditcard_details_Discover_Result>("GetCreditcard_details_Discover", storeIdParameter, shiftNameParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetCreditcard_details_Master_Result> GetCreditcard_details_Master(Nullable<int> storeId, string shiftName, string startTime, string endTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(int));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCreditcard_details_Master_Result>("GetCreditcard_details_Master", storeIdParameter, shiftNameParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetCreditcard_details_Visa_Result> GetCreditcard_details_Visa(Nullable<int> storeId, string shiftName, string startTime, string endTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(int));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var endTimeParameter = endTime != null ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCreditcard_details_Visa_Result>("GetCreditcard_details_Visa", storeIdParameter, shiftNameParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> tbl_Creditcard_details_exists(Nullable<int> storeId, Nullable<int> shiftId, string date, string shiftName)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(int));
    
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("ShiftId", shiftId) :
                new ObjectParameter("ShiftId", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("tbl_Creditcard_details_exists", storeIdParameter, shiftIdParameter, dateParameter, shiftNameParameter);
        }
    
        public virtual ObjectResult<string> tbl_Creditcard_details_Insert(Nullable<int> shiftId, Nullable<int> storeId, string date, Nullable<decimal> amount_AMEX, Nullable<decimal> amount_Discover, Nullable<decimal> amount_Master, Nullable<decimal> amount_Visa, string shiftName, Nullable<int> terminalId)
        {
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("ShiftId", shiftId) :
                new ObjectParameter("ShiftId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var amount_AMEXParameter = amount_AMEX.HasValue ?
                new ObjectParameter("Amount_AMEX", amount_AMEX) :
                new ObjectParameter("Amount_AMEX", typeof(decimal));
    
            var amount_DiscoverParameter = amount_Discover.HasValue ?
                new ObjectParameter("Amount_Discover", amount_Discover) :
                new ObjectParameter("Amount_Discover", typeof(decimal));
    
            var amount_MasterParameter = amount_Master.HasValue ?
                new ObjectParameter("Amount_Master", amount_Master) :
                new ObjectParameter("Amount_Master", typeof(decimal));
    
            var amount_VisaParameter = amount_Visa.HasValue ?
                new ObjectParameter("Amount_Visa", amount_Visa) :
                new ObjectParameter("Amount_Visa", typeof(decimal));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var terminalIdParameter = terminalId.HasValue ?
                new ObjectParameter("TerminalId", terminalId) :
                new ObjectParameter("TerminalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("tbl_Creditcard_details_Insert", shiftIdParameter, storeIdParameter, dateParameter, amount_AMEXParameter, amount_DiscoverParameter, amount_MasterParameter, amount_VisaParameter, shiftNameParameter, terminalIdParameter);
        }
    
        public virtual int tbl_Creditcard_details_Update(Nullable<int> id, Nullable<int> shiftId, Nullable<int> storeId, string date, Nullable<decimal> amount_AMEX, Nullable<decimal> amount_Discover, Nullable<decimal> amount_Master, Nullable<decimal> amount_Visa, string shiftName, Nullable<int> terminalId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("ShiftId", shiftId) :
                new ObjectParameter("ShiftId", typeof(int));
    
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            var amount_AMEXParameter = amount_AMEX.HasValue ?
                new ObjectParameter("Amount_AMEX", amount_AMEX) :
                new ObjectParameter("Amount_AMEX", typeof(decimal));
    
            var amount_DiscoverParameter = amount_Discover.HasValue ?
                new ObjectParameter("Amount_Discover", amount_Discover) :
                new ObjectParameter("Amount_Discover", typeof(decimal));
    
            var amount_MasterParameter = amount_Master.HasValue ?
                new ObjectParameter("Amount_Master", amount_Master) :
                new ObjectParameter("Amount_Master", typeof(decimal));
    
            var amount_VisaParameter = amount_Visa.HasValue ?
                new ObjectParameter("Amount_Visa", amount_Visa) :
                new ObjectParameter("Amount_Visa", typeof(decimal));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var terminalIdParameter = terminalId.HasValue ?
                new ObjectParameter("TerminalId", terminalId) :
                new ObjectParameter("TerminalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_Creditcard_details_Update", idParameter, shiftIdParameter, storeIdParameter, dateParameter, amount_AMEXParameter, amount_DiscoverParameter, amount_MasterParameter, amount_VisaParameter, shiftNameParameter, terminalIdParameter);
        }
    
        public virtual ObjectResult<Get_Count_tbl_otherdeposit_Result> Get_Count_tbl_otherdeposit(Nullable<int> shiftId, string date)
        {
            var shiftIdParameter = shiftId.HasValue ?
                new ObjectParameter("ShiftId", shiftId) :
                new ObjectParameter("ShiftId", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Count_tbl_otherdeposit_Result>("Get_Count_tbl_otherdeposit", shiftIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<string> tbl_Invoice_Insert_discount(Nullable<int> store_id, Nullable<int> type_id, string payment_type, Nullable<int> vendor_id, Nullable<System.DateTime> invoice_Date, string invoice_Number, string note, string attachNote, string uploadInvoice, string scanInvoice, Nullable<int> isStatus_id, string createdBy, Nullable<decimal> totalamount, Nullable<bool> qBtransfer, Nullable<int> discounttype, Nullable<decimal> discount, Nullable<decimal> discountamount, Nullable<int> refinvoiceid)
        {
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var type_idParameter = type_id.HasValue ?
                new ObjectParameter("Type_id", type_id) :
                new ObjectParameter("Type_id", typeof(int));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var vendor_idParameter = vendor_id.HasValue ?
                new ObjectParameter("Vendor_id", vendor_id) :
                new ObjectParameter("Vendor_id", typeof(int));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var attachNoteParameter = attachNote != null ?
                new ObjectParameter("AttachNote", attachNote) :
                new ObjectParameter("AttachNote", typeof(string));
    
            var uploadInvoiceParameter = uploadInvoice != null ?
                new ObjectParameter("UploadInvoice", uploadInvoice) :
                new ObjectParameter("UploadInvoice", typeof(string));
    
            var scanInvoiceParameter = scanInvoice != null ?
                new ObjectParameter("ScanInvoice", scanInvoice) :
                new ObjectParameter("ScanInvoice", typeof(string));
    
            var isStatus_idParameter = isStatus_id.HasValue ?
                new ObjectParameter("IsStatus_id", isStatus_id) :
                new ObjectParameter("IsStatus_id", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var totalamountParameter = totalamount.HasValue ?
                new ObjectParameter("totalamount", totalamount) :
                new ObjectParameter("totalamount", typeof(decimal));
    
            var qBtransferParameter = qBtransfer.HasValue ?
                new ObjectParameter("QBtransfer", qBtransfer) :
                new ObjectParameter("QBtransfer", typeof(bool));
    
            var discounttypeParameter = discounttype.HasValue ?
                new ObjectParameter("discounttype", discounttype) :
                new ObjectParameter("discounttype", typeof(int));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var discountamountParameter = discountamount.HasValue ?
                new ObjectParameter("discountamount", discountamount) :
                new ObjectParameter("discountamount", typeof(decimal));
    
            var refinvoiceidParameter = refinvoiceid.HasValue ?
                new ObjectParameter("refinvoiceid", refinvoiceid) :
                new ObjectParameter("refinvoiceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("tbl_Invoice_Insert_discount", store_idParameter, type_idParameter, payment_typeParameter, vendor_idParameter, invoice_DateParameter, invoice_NumberParameter, noteParameter, attachNoteParameter, uploadInvoiceParameter, scanInvoiceParameter, isStatus_idParameter, createdByParameter, totalamountParameter, qBtransferParameter, discounttypeParameter, discountParameter, discountamountParameter, refinvoiceidParameter);
        }
    
        public virtual ObjectResult<string> tbl_Invoice_Insert_StoreManager_discount(Nullable<int> store_id, Nullable<int> type_id, string payment_type, Nullable<int> vendor_id, Nullable<System.DateTime> invoice_Date, string invoice_Number, string note, string attachNote, string uploadInvoice, string scanInvoice, Nullable<int> isStatus_id, string createdBy, Nullable<decimal> totalamount, string approveRejectBy, Nullable<bool> qBtransfer, Nullable<int> discounttype, Nullable<decimal> discount, Nullable<decimal> discountamount, Nullable<int> refinvoiceid)
        {
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var type_idParameter = type_id.HasValue ?
                new ObjectParameter("Type_id", type_id) :
                new ObjectParameter("Type_id", typeof(int));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var vendor_idParameter = vendor_id.HasValue ?
                new ObjectParameter("Vendor_id", vendor_id) :
                new ObjectParameter("Vendor_id", typeof(int));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var attachNoteParameter = attachNote != null ?
                new ObjectParameter("AttachNote", attachNote) :
                new ObjectParameter("AttachNote", typeof(string));
    
            var uploadInvoiceParameter = uploadInvoice != null ?
                new ObjectParameter("UploadInvoice", uploadInvoice) :
                new ObjectParameter("UploadInvoice", typeof(string));
    
            var scanInvoiceParameter = scanInvoice != null ?
                new ObjectParameter("ScanInvoice", scanInvoice) :
                new ObjectParameter("ScanInvoice", typeof(string));
    
            var isStatus_idParameter = isStatus_id.HasValue ?
                new ObjectParameter("IsStatus_id", isStatus_id) :
                new ObjectParameter("IsStatus_id", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var totalamountParameter = totalamount.HasValue ?
                new ObjectParameter("totalamount", totalamount) :
                new ObjectParameter("totalamount", typeof(decimal));
    
            var approveRejectByParameter = approveRejectBy != null ?
                new ObjectParameter("ApproveRejectBy", approveRejectBy) :
                new ObjectParameter("ApproveRejectBy", typeof(string));
    
            var qBtransferParameter = qBtransfer.HasValue ?
                new ObjectParameter("QBtransfer", qBtransfer) :
                new ObjectParameter("QBtransfer", typeof(bool));
    
            var discounttypeParameter = discounttype.HasValue ?
                new ObjectParameter("discounttype", discounttype) :
                new ObjectParameter("discounttype", typeof(int));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var discountamountParameter = discountamount.HasValue ?
                new ObjectParameter("discountamount", discountamount) :
                new ObjectParameter("discountamount", typeof(decimal));
    
            var refinvoiceidParameter = refinvoiceid.HasValue ?
                new ObjectParameter("refinvoiceid", refinvoiceid) :
                new ObjectParameter("refinvoiceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("tbl_Invoice_Insert_StoreManager_discount", store_idParameter, type_idParameter, payment_typeParameter, vendor_idParameter, invoice_DateParameter, invoice_NumberParameter, noteParameter, attachNoteParameter, uploadInvoiceParameter, scanInvoiceParameter, isStatus_idParameter, createdByParameter, totalamountParameter, approveRejectByParameter, qBtransferParameter, discounttypeParameter, discountParameter, discountamountParameter, refinvoiceidParameter);
        }
    
        public virtual int tbl_invoiceupdate_discountdata(Nullable<int> id, Nullable<int> discounttype, Nullable<decimal> discount, Nullable<decimal> discountamount, Nullable<int> refinvoiceid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var discounttypeParameter = discounttype.HasValue ?
                new ObjectParameter("discounttype", discounttype) :
                new ObjectParameter("discounttype", typeof(int));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var discountamountParameter = discountamount.HasValue ?
                new ObjectParameter("discountamount", discountamount) :
                new ObjectParameter("discountamount", typeof(decimal));
    
            var refinvoiceidParameter = refinvoiceid.HasValue ?
                new ObjectParameter("refinvoiceid", refinvoiceid) :
                new ObjectParameter("refinvoiceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_invoiceupdate_discountdata", idParameter, discounttypeParameter, discountParameter, discountamountParameter, refinvoiceidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> tbl_Invoice_exists_InNo_Edit_New(Nullable<int> id, string invoice_Number, Nullable<System.DateTime> invoicedate, Nullable<int> storeid, Nullable<int> typeid, Nullable<int> vendorid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var invoicedateParameter = invoicedate.HasValue ?
                new ObjectParameter("invoicedate", invoicedate) :
                new ObjectParameter("invoicedate", typeof(System.DateTime));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var typeidParameter = typeid.HasValue ?
                new ObjectParameter("typeid", typeid) :
                new ObjectParameter("typeid", typeof(int));
    
            var vendoridParameter = vendorid.HasValue ?
                new ObjectParameter("vendorid", vendorid) :
                new ObjectParameter("vendorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("tbl_Invoice_exists_InNo_Edit_New", idParameter, invoice_NumberParameter, invoicedateParameter, storeidParameter, typeidParameter, vendoridParameter);
        }
    
        public virtual int tbl_otherdeposit_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_otherdeposit_Delete", idParameter);
        }
    
        public virtual int tbl_invoice_updatediscountdata(Nullable<int> id, Nullable<int> discounttype, Nullable<decimal> discount, Nullable<decimal> discountamt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var discounttypeParameter = discounttype.HasValue ?
                new ObjectParameter("discounttype", discounttype) :
                new ObjectParameter("discounttype", typeof(int));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var discountamtParameter = discountamt.HasValue ?
                new ObjectParameter("discountamt", discountamt) :
                new ObjectParameter("discountamt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_invoice_updatediscountdata", idParameter, discounttypeParameter, discountParameter, discountamtParameter);
        }
    
        public virtual ObjectResult<GetUnassignedShiftnamelist_Result> GetUnassignedShiftnamelist(Nullable<int> store_id)
        {
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnassignedShiftnamelist_Result>("GetUnassignedShiftnamelist", store_idParameter);
        }
    
        public virtual ObjectResult<tbl_SalesActivitySummary_Select_Result> tbl_SalesActivitySummary_Select(Nullable<System.DateTime> transactionStartTime, Nullable<System.DateTime> transactionEndTime, Nullable<int> storeid, Nullable<int> terminalid)
        {
            var transactionStartTimeParameter = transactionStartTime.HasValue ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(System.DateTime));
    
            var transactionEndTimeParameter = transactionEndTime.HasValue ?
                new ObjectParameter("TransactionEndTime", transactionEndTime) :
                new ObjectParameter("TransactionEndTime", typeof(System.DateTime));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var terminalidParameter = terminalid.HasValue ?
                new ObjectParameter("Terminalid", terminalid) :
                new ObjectParameter("Terminalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_SalesActivitySummary_Select_Result>("tbl_SalesActivitySummary_Select", transactionStartTimeParameter, transactionEndTimeParameter, storeidParameter, terminalidParameter);
        }
    
        public virtual ObjectResult<tbl_Invoice_DuplicateInvoiceDashbord_Result> tbl_Invoice_DuplicateInvoiceDashbord(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string payment_type, Nullable<int> dept_id, Nullable<int> store_id, string searchdashbord, Nullable<decimal> amtMaximum, Nullable<decimal> amtMinimum)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var searchdashbordParameter = searchdashbord != null ?
                new ObjectParameter("searchdashbord", searchdashbord) :
                new ObjectParameter("searchdashbord", typeof(string));
    
            var amtMaximumParameter = amtMaximum.HasValue ?
                new ObjectParameter("AmtMaximum", amtMaximum) :
                new ObjectParameter("AmtMaximum", typeof(decimal));
    
            var amtMinimumParameter = amtMinimum.HasValue ?
                new ObjectParameter("AmtMinimum", amtMinimum) :
                new ObjectParameter("AmtMinimum", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Invoice_DuplicateInvoiceDashbord_Result>("tbl_Invoice_DuplicateInvoiceDashbord", startdateParameter, enddateParameter, payment_typeParameter, dept_idParameter, store_idParameter, searchdashbordParameter, amtMaximumParameter, amtMinimumParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> tbl_Invoice_Update(Nullable<int> id, string invoice_Number, Nullable<System.DateTime> invoicedate, Nullable<int> storeid, Nullable<int> typeid, Nullable<int> vendorid, string payment_type, string note, Nullable<int> isStatus_id, string modifiedBy, Nullable<System.DateTime> modifiedOn, Nullable<decimal> totalAmtByDept, Nullable<bool> qBtransfer)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var invoicedateParameter = invoicedate.HasValue ?
                new ObjectParameter("invoicedate", invoicedate) :
                new ObjectParameter("invoicedate", typeof(System.DateTime));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var typeidParameter = typeid.HasValue ?
                new ObjectParameter("typeid", typeid) :
                new ObjectParameter("typeid", typeof(int));
    
            var vendoridParameter = vendorid.HasValue ?
                new ObjectParameter("vendorid", vendorid) :
                new ObjectParameter("vendorid", typeof(int));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var isStatus_idParameter = isStatus_id.HasValue ?
                new ObjectParameter("IsStatus_id", isStatus_id) :
                new ObjectParameter("IsStatus_id", typeof(int));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var modifiedOnParameter = modifiedOn.HasValue ?
                new ObjectParameter("ModifiedOn", modifiedOn) :
                new ObjectParameter("ModifiedOn", typeof(System.DateTime));
    
            var totalAmtByDeptParameter = totalAmtByDept.HasValue ?
                new ObjectParameter("TotalAmtByDept", totalAmtByDept) :
                new ObjectParameter("TotalAmtByDept", typeof(decimal));
    
            var qBtransferParameter = qBtransfer.HasValue ?
                new ObjectParameter("QBtransfer", qBtransfer) :
                new ObjectParameter("QBtransfer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("tbl_Invoice_Update", idParameter, invoice_NumberParameter, invoicedateParameter, storeidParameter, typeidParameter, vendoridParameter, payment_typeParameter, noteParameter, isStatus_idParameter, modifiedByParameter, modifiedOnParameter, totalAmtByDeptParameter, qBtransferParameter);
        }
    
        public virtual ObjectResult<tbl_Invoice_GridData_ForPdf_Result> tbl_Invoice_GridData_ForPdf(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string payment_type, Nullable<int> dept_id, Nullable<int> store_id, Nullable<int> isStatus_id, Nullable<int> vendor, Nullable<decimal> amtMaximum, Nullable<decimal> amtMinimum)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var isStatus_idParameter = isStatus_id.HasValue ?
                new ObjectParameter("IsStatus_id", isStatus_id) :
                new ObjectParameter("IsStatus_id", typeof(int));
    
            var vendorParameter = vendor.HasValue ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(int));
    
            var amtMaximumParameter = amtMaximum.HasValue ?
                new ObjectParameter("AmtMaximum", amtMaximum) :
                new ObjectParameter("AmtMaximum", typeof(decimal));
    
            var amtMinimumParameter = amtMinimum.HasValue ?
                new ObjectParameter("AmtMinimum", amtMinimum) :
                new ObjectParameter("AmtMinimum", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Invoice_GridData_ForPdf_Result>("tbl_Invoice_GridData_ForPdf", startdateParameter, enddateParameter, payment_typeParameter, dept_idParameter, store_idParameter, isStatus_idParameter, vendorParameter, amtMaximumParameter, amtMinimumParameter);
        }
    
        public virtual ObjectResult<tbl_Invoice_GridData_ForExcel_Result> tbl_Invoice_GridData_ForExcel(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string payment_type, Nullable<int> dept_id, Nullable<int> store_id, Nullable<int> isStatus_id, Nullable<int> vendor, Nullable<decimal> amtMaximum, Nullable<decimal> amtMinimum)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var isStatus_idParameter = isStatus_id.HasValue ?
                new ObjectParameter("IsStatus_id", isStatus_id) :
                new ObjectParameter("IsStatus_id", typeof(int));
    
            var vendorParameter = vendor.HasValue ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(int));
    
            var amtMaximumParameter = amtMaximum.HasValue ?
                new ObjectParameter("AmtMaximum", amtMaximum) :
                new ObjectParameter("AmtMaximum", typeof(decimal));
    
            var amtMinimumParameter = amtMinimum.HasValue ?
                new ObjectParameter("AmtMinimum", amtMinimum) :
                new ObjectParameter("AmtMinimum", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Invoice_GridData_ForExcel_Result>("tbl_Invoice_GridData_ForExcel", startdateParameter, enddateParameter, payment_typeParameter, dept_idParameter, store_idParameter, isStatus_idParameter, vendorParameter, amtMaximumParameter, amtMinimumParameter);
        }
    
        public virtual ObjectResult<CheckUserExistwhilelock_Result> CheckUserExistwhilelock(Nullable<int> storeid, Nullable<int> roleid, Nullable<int> reg_userid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("reg_userid", reg_userid) :
                new ObjectParameter("reg_userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckUserExistwhilelock_Result>("CheckUserExistwhilelock", storeidParameter, roleidParameter, reg_useridParameter);
        }
    
        public virtual ObjectResult<GetRoleidfromuserid_Result> GetRoleidfromuserid(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleidfromuserid_Result>("GetRoleidfromuserid", useridParameter);
        }
    
        public virtual ObjectResult<tbl_userlist_Result> tbl_userlist(Nullable<int> reg_userid, Nullable<int> roleid, Nullable<int> storeid)
        {
            var reg_useridParameter = reg_userid.HasValue ?
                new ObjectParameter("Reg_userid", reg_userid) :
                new ObjectParameter("Reg_userid", typeof(int));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("Roleid", roleid) :
                new ObjectParameter("Roleid", typeof(int));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_userlist_Result>("tbl_userlist", reg_useridParameter, roleidParameter, storeidParameter);
        }
    
        public virtual ObjectResult<tbl_Invoice_GridData_Result> tbl_Invoice_GridData(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string payment_type, Nullable<int> dept_id, Nullable<int> store_id, Nullable<int> isStatus_id, Nullable<int> vendorName, Nullable<decimal> amtMaximum, Nullable<decimal> amtMinimum)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var isStatus_idParameter = isStatus_id.HasValue ?
                new ObjectParameter("IsStatus_id", isStatus_id) :
                new ObjectParameter("IsStatus_id", typeof(int));
    
            var vendorNameParameter = vendorName.HasValue ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(int));
    
            var amtMaximumParameter = amtMaximum.HasValue ?
                new ObjectParameter("AmtMaximum", amtMaximum) :
                new ObjectParameter("AmtMaximum", typeof(decimal));
    
            var amtMinimumParameter = amtMinimum.HasValue ?
                new ObjectParameter("AmtMinimum", amtMinimum) :
                new ObjectParameter("AmtMinimum", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Invoice_GridData_Result>("tbl_Invoice_GridData", startdateParameter, enddateParameter, payment_typeParameter, dept_idParameter, store_idParameter, isStatus_idParameter, vendorNameParameter, amtMaximumParameter, amtMinimumParameter);
        }
    
        public virtual int Membership_DisableUser(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Membership_DisableUser", useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> tbl_Invoice_DeleteAndInsertintodeletehistory(Nullable<int> invoiceid, Nullable<int> store_id, Nullable<int> type_id, string payment_type, Nullable<int> vendor_id, Nullable<System.DateTime> invoice_Date, string invoice_Number, string note, string attachNote, string uploadInvoice, string scanInvoice, Nullable<int> isStatus_id, string createdBy, Nullable<decimal> totalamount, string approveRejectBy, Nullable<bool> qBtransfer)
        {
            var invoiceidParameter = invoiceid.HasValue ?
                new ObjectParameter("invoiceid", invoiceid) :
                new ObjectParameter("invoiceid", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var type_idParameter = type_id.HasValue ?
                new ObjectParameter("Type_id", type_id) :
                new ObjectParameter("Type_id", typeof(int));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var vendor_idParameter = vendor_id.HasValue ?
                new ObjectParameter("Vendor_id", vendor_id) :
                new ObjectParameter("Vendor_id", typeof(int));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var attachNoteParameter = attachNote != null ?
                new ObjectParameter("AttachNote", attachNote) :
                new ObjectParameter("AttachNote", typeof(string));
    
            var uploadInvoiceParameter = uploadInvoice != null ?
                new ObjectParameter("UploadInvoice", uploadInvoice) :
                new ObjectParameter("UploadInvoice", typeof(string));
    
            var scanInvoiceParameter = scanInvoice != null ?
                new ObjectParameter("ScanInvoice", scanInvoice) :
                new ObjectParameter("ScanInvoice", typeof(string));
    
            var isStatus_idParameter = isStatus_id.HasValue ?
                new ObjectParameter("IsStatus_id", isStatus_id) :
                new ObjectParameter("IsStatus_id", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var totalamountParameter = totalamount.HasValue ?
                new ObjectParameter("totalamount", totalamount) :
                new ObjectParameter("totalamount", typeof(decimal));
    
            var approveRejectByParameter = approveRejectBy != null ?
                new ObjectParameter("ApproveRejectBy", approveRejectBy) :
                new ObjectParameter("ApproveRejectBy", typeof(string));
    
            var qBtransferParameter = qBtransfer.HasValue ?
                new ObjectParameter("QBtransfer", qBtransfer) :
                new ObjectParameter("QBtransfer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("tbl_Invoice_DeleteAndInsertintodeletehistory", invoiceidParameter, store_idParameter, type_idParameter, payment_typeParameter, vendor_idParameter, invoice_DateParameter, invoice_NumberParameter, noteParameter, attachNoteParameter, uploadInvoiceParameter, scanInvoiceParameter, isStatus_idParameter, createdByParameter, totalamountParameter, approveRejectByParameter, qBtransferParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_otherdeposit_insert(string name, string paymentmethod, Nullable<decimal> amount, string date, Nullable<int> storeid, string options, string vendor, string other)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var paymentmethodParameter = paymentmethod != null ?
                new ObjectParameter("paymentmethod", paymentmethod) :
                new ObjectParameter("paymentmethod", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var optionsParameter = options != null ?
                new ObjectParameter("options", options) :
                new ObjectParameter("options", typeof(string));
    
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("Other", other) :
                new ObjectParameter("Other", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_otherdeposit_insert", nameParameter, paymentmethodParameter, amountParameter, dateParameter, storeidParameter, optionsParameter, vendorParameter, otherParameter);
        }
    
        public virtual ObjectResult<tbl_Option_select_Result> tbl_Option_select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Option_select_Result>("tbl_Option_select");
        }
    
        public virtual ObjectResult<tbl_Payment_Method_Byoption_Result> tbl_Payment_Method_Byoption(string selectOption)
        {
            var selectOptionParameter = selectOption != null ?
                new ObjectParameter("SelectOption", selectOption) :
                new ObjectParameter("SelectOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Payment_Method_Byoption_Result>("tbl_Payment_Method_Byoption", selectOptionParameter);
        }
    
        public virtual ObjectResult<Getotherdeposit_Result> Getotherdeposit(Nullable<int> storeId, string transactionStartTime, string transactionEndTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var transactionEndTimeParameter = transactionEndTime != null ?
                new ObjectParameter("TransactionEndTime", transactionEndTime) :
                new ObjectParameter("TransactionEndTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getotherdeposit_Result>("Getotherdeposit", storeIdParameter, transactionStartTimeParameter, transactionEndTimeParameter);
        }
    
        public virtual ObjectResult<GetLatestAvailableDate_Result> GetLatestAvailableDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLatestAvailableDate_Result>("GetLatestAvailableDate");
        }
    
        public virtual ObjectResult<tbl_SalesActivitySummary_shiftlist_byid_Result> tbl_SalesActivitySummary_shiftlist_byid(Nullable<int> storeid, string transactionStartTime, Nullable<int> terminalid, Nullable<int> id)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var terminalidParameter = terminalid.HasValue ?
                new ObjectParameter("terminalid", terminalid) :
                new ObjectParameter("terminalid", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_SalesActivitySummary_shiftlist_byid_Result>("tbl_SalesActivitySummary_shiftlist_byid", storeidParameter, transactionStartTimeParameter, terminalidParameter, idParameter);
        }
    
        public virtual ObjectResult<tbl_PaidOut_byid_Result> tbl_PaidOut_byid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_PaidOut_byid_Result>("tbl_PaidOut_byid", idParameter);
        }
    
        public virtual int tbl_PaidOut_Update_byid(Nullable<int> id, Nullable<int> updateById, Nullable<decimal> amount)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var updateByIdParameter = updateById.HasValue ?
                new ObjectParameter("UpdateById", updateById) :
                new ObjectParameter("UpdateById", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_PaidOut_Update_byid", idParameter, updateByIdParameter, amountParameter);
        }
    
        public virtual ObjectResult<tbl_Invoice_Dashbord_Grid_Data_Result> tbl_Invoice_Dashbord_Grid_Data(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string payment_type, Nullable<int> dept_id, Nullable<int> store_id, string searchdashbord, Nullable<decimal> amtMaximum, Nullable<decimal> amtMinimum, Nullable<int> pageindex)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var searchdashbordParameter = searchdashbord != null ?
                new ObjectParameter("searchdashbord", searchdashbord) :
                new ObjectParameter("searchdashbord", typeof(string));
    
            var amtMaximumParameter = amtMaximum.HasValue ?
                new ObjectParameter("AmtMaximum", amtMaximum) :
                new ObjectParameter("AmtMaximum", typeof(decimal));
    
            var amtMinimumParameter = amtMinimum.HasValue ?
                new ObjectParameter("AmtMinimum", amtMinimum) :
                new ObjectParameter("AmtMinimum", typeof(decimal));
    
            var pageindexParameter = pageindex.HasValue ?
                new ObjectParameter("pageindex", pageindex) :
                new ObjectParameter("pageindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Invoice_Dashbord_Grid_Data_Result>("tbl_Invoice_Dashbord_Grid_Data", startdateParameter, enddateParameter, payment_typeParameter, dept_idParameter, store_idParameter, searchdashbordParameter, amtMaximumParameter, amtMinimumParameter, pageindexParameter);
        }
    
        public virtual ObjectResult<string> tbl_Invoice_Insert(Nullable<int> store_id, Nullable<int> type_id, string payment_type, Nullable<int> vendor_id, Nullable<System.DateTime> invoice_Date, string invoice_Number, string note, string attachNote, string uploadInvoice, string scanInvoice, Nullable<int> isStatus_id, string createdBy, Nullable<decimal> totalamount, Nullable<bool> qBtransfer)
        {
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var type_idParameter = type_id.HasValue ?
                new ObjectParameter("Type_id", type_id) :
                new ObjectParameter("Type_id", typeof(int));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var vendor_idParameter = vendor_id.HasValue ?
                new ObjectParameter("Vendor_id", vendor_id) :
                new ObjectParameter("Vendor_id", typeof(int));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var attachNoteParameter = attachNote != null ?
                new ObjectParameter("AttachNote", attachNote) :
                new ObjectParameter("AttachNote", typeof(string));
    
            var uploadInvoiceParameter = uploadInvoice != null ?
                new ObjectParameter("UploadInvoice", uploadInvoice) :
                new ObjectParameter("UploadInvoice", typeof(string));
    
            var scanInvoiceParameter = scanInvoice != null ?
                new ObjectParameter("ScanInvoice", scanInvoice) :
                new ObjectParameter("ScanInvoice", typeof(string));
    
            var isStatus_idParameter = isStatus_id.HasValue ?
                new ObjectParameter("IsStatus_id", isStatus_id) :
                new ObjectParameter("IsStatus_id", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var totalamountParameter = totalamount.HasValue ?
                new ObjectParameter("totalamount", totalamount) :
                new ObjectParameter("totalamount", typeof(decimal));
    
            var qBtransferParameter = qBtransfer.HasValue ?
                new ObjectParameter("QBtransfer", qBtransfer) :
                new ObjectParameter("QBtransfer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("tbl_Invoice_Insert", store_idParameter, type_idParameter, payment_typeParameter, vendor_idParameter, invoice_DateParameter, invoice_NumberParameter, noteParameter, attachNoteParameter, uploadInvoiceParameter, scanInvoiceParameter, isStatus_idParameter, createdByParameter, totalamountParameter, qBtransferParameter);
        }
    
        public virtual ObjectResult<string> tbl_Invoice_Insert_StoreManager(Nullable<int> store_id, Nullable<int> type_id, string payment_type, Nullable<int> vendor_id, Nullable<System.DateTime> invoice_Date, string invoice_Number, string note, string attachNote, string uploadInvoice, string scanInvoice, Nullable<int> isStatus_id, string createdBy, Nullable<decimal> totalamount, string approveRejectBy, Nullable<bool> qBtransfer)
        {
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var type_idParameter = type_id.HasValue ?
                new ObjectParameter("Type_id", type_id) :
                new ObjectParameter("Type_id", typeof(int));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var vendor_idParameter = vendor_id.HasValue ?
                new ObjectParameter("Vendor_id", vendor_id) :
                new ObjectParameter("Vendor_id", typeof(int));
    
            var invoice_DateParameter = invoice_Date.HasValue ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(System.DateTime));
    
            var invoice_NumberParameter = invoice_Number != null ?
                new ObjectParameter("Invoice_Number", invoice_Number) :
                new ObjectParameter("Invoice_Number", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var attachNoteParameter = attachNote != null ?
                new ObjectParameter("AttachNote", attachNote) :
                new ObjectParameter("AttachNote", typeof(string));
    
            var uploadInvoiceParameter = uploadInvoice != null ?
                new ObjectParameter("UploadInvoice", uploadInvoice) :
                new ObjectParameter("UploadInvoice", typeof(string));
    
            var scanInvoiceParameter = scanInvoice != null ?
                new ObjectParameter("ScanInvoice", scanInvoice) :
                new ObjectParameter("ScanInvoice", typeof(string));
    
            var isStatus_idParameter = isStatus_id.HasValue ?
                new ObjectParameter("IsStatus_id", isStatus_id) :
                new ObjectParameter("IsStatus_id", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var totalamountParameter = totalamount.HasValue ?
                new ObjectParameter("totalamount", totalamount) :
                new ObjectParameter("totalamount", typeof(decimal));
    
            var approveRejectByParameter = approveRejectBy != null ?
                new ObjectParameter("ApproveRejectBy", approveRejectBy) :
                new ObjectParameter("ApproveRejectBy", typeof(string));
    
            var qBtransferParameter = qBtransfer.HasValue ?
                new ObjectParameter("QBtransfer", qBtransfer) :
                new ObjectParameter("QBtransfer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("tbl_Invoice_Insert_StoreManager", store_idParameter, type_idParameter, payment_typeParameter, vendor_idParameter, invoice_DateParameter, invoice_NumberParameter, noteParameter, attachNoteParameter, uploadInvoiceParameter, scanInvoiceParameter, isStatus_idParameter, createdByParameter, totalamountParameter, approveRejectByParameter, qBtransferParameter);
        }
    
        public virtual ObjectResult<tbl_Invoice_Dashbord_GridData_Administrator_Result> tbl_Invoice_Dashbord_GridData_Administrator(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string payment_type, Nullable<int> dept_id, Nullable<int> store_id, string searchdashbord, Nullable<decimal> amtMaximum, Nullable<decimal> amtMinimum)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var payment_typeParameter = payment_type != null ?
                new ObjectParameter("Payment_type", payment_type) :
                new ObjectParameter("Payment_type", typeof(string));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var searchdashbordParameter = searchdashbord != null ?
                new ObjectParameter("searchdashbord", searchdashbord) :
                new ObjectParameter("searchdashbord", typeof(string));
    
            var amtMaximumParameter = amtMaximum.HasValue ?
                new ObjectParameter("AmtMaximum", amtMaximum) :
                new ObjectParameter("AmtMaximum", typeof(decimal));
    
            var amtMinimumParameter = amtMinimum.HasValue ?
                new ObjectParameter("AmtMinimum", amtMinimum) :
                new ObjectParameter("AmtMinimum", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Invoice_Dashbord_GridData_Administrator_Result>("tbl_Invoice_Dashbord_GridData_Administrator", startdateParameter, enddateParameter, payment_typeParameter, dept_idParameter, store_idParameter, searchdashbordParameter, amtMaximumParameter, amtMinimumParameter);
        }
    
        public virtual ObjectResult<GetLatestAvailableDateForSalesSummery_Result> GetLatestAvailableDateForSalesSummery()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLatestAvailableDateForSalesSummery_Result>("GetLatestAvailableDateForSalesSummery");
        }
    
        public virtual ObjectResult<GetPaidOutCount_Result> GetPaidOutCount(string startDate, string endDate)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPaidOutCount_Result>("GetPaidOutCount", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetPaidOutCountShiftWise_Result> GetPaidOutCountShiftWise(Nullable<int> storeId, string shiftName, string startDate, string endDate)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(int));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPaidOutCountShiftWise_Result>("GetPaidOutCountShiftWise", storeIdParameter, shiftNameParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetPaidOutTitleList_Result> GetPaidOutTitleList(string startDate, string endDate)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPaidOutTitleList_Result>("GetPaidOutTitleList", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetPaidOutTitleListName_Result> GetPaidOutTitleListName(Nullable<int> storeId, string shiftName, string startDate, string endDate, string paidOutTitle)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(int));
    
            var shiftNameParameter = shiftName != null ?
                new ObjectParameter("ShiftName", shiftName) :
                new ObjectParameter("ShiftName", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var paidOutTitleParameter = paidOutTitle != null ?
                new ObjectParameter("PaidOutTitle", paidOutTitle) :
                new ObjectParameter("PaidOutTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPaidOutTitleListName_Result>("GetPaidOutTitleListName", storeIdParameter, shiftNameParameter, startDateParameter, endDateParameter, paidOutTitleParameter);
        }
    
        public virtual ObjectResult<GetSalesAmountTotal_Result> GetSalesAmountTotal(Nullable<int> storeId, string transactionStartTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesAmountTotal_Result>("GetSalesAmountTotal", storeIdParameter, transactionStartTimeParameter);
        }
    
        public virtual ObjectResult<GetCustomercount_byterminal_Result> GetCustomercount_byterminal(string transactionStartTime, Nullable<int> storeid)
        {
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomercount_byterminal_Result>("GetCustomercount_byterminal", transactionStartTimeParameter, storeidParameter);
        }
    
        public virtual ObjectResult<GetPaidOutTotal_Result> GetPaidOutTotal(Nullable<int> storeId, string startDate, string endDate)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPaidOutTotal_Result>("GetPaidOutTotal", storeIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetPaidOutTotal_Shiftwisereport_Result> GetPaidOutTotal_Shiftwisereport(Nullable<int> storeId, string transactionStartTime)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPaidOutTotal_Shiftwisereport_Result>("GetPaidOutTotal_Shiftwisereport", storeIdParameter, transactionStartTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckExist_Configuration(Nullable<int> group_id)
        {
            var group_idParameter = group_id.HasValue ?
                new ObjectParameter("Group_id", group_id) :
                new ObjectParameter("Group_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckExist_Configuration", group_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckUseOfGroupId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckUseOfGroupId", idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Insert_tbl_ChildSalesEntries(Nullable<int> gid, Nullable<int> storeid, string groupname, Nullable<int> groupid, Nullable<decimal> amount, Nullable<int> deptid)
        {
            var gidParameter = gid.HasValue ?
                new ObjectParameter("gid", gid) :
                new ObjectParameter("gid", typeof(int));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var groupnameParameter = groupname != null ?
                new ObjectParameter("groupname", groupname) :
                new ObjectParameter("groupname", typeof(string));
    
            var groupidParameter = groupid.HasValue ?
                new ObjectParameter("groupid", groupid) :
                new ObjectParameter("groupid", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Insert_tbl_ChildSalesEntries", gidParameter, storeidParameter, groupnameParameter, groupidParameter, amountParameter, deptidParameter);
        }
    
        public virtual int tbl_inquiry_insert(string name, string email, string contactno, string adddress, string inquirytype, string city, string state, Nullable<int> callme)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var contactnoParameter = contactno != null ?
                new ObjectParameter("contactno", contactno) :
                new ObjectParameter("contactno", typeof(string));
    
            var adddressParameter = adddress != null ?
                new ObjectParameter("adddress", adddress) :
                new ObjectParameter("adddress", typeof(string));
    
            var inquirytypeParameter = inquirytype != null ?
                new ObjectParameter("inquirytype", inquirytype) :
                new ObjectParameter("inquirytype", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var callmeParameter = callme.HasValue ?
                new ObjectParameter("callme", callme) :
                new ObjectParameter("callme", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_inquiry_insert", nameParameter, emailParameter, contactnoParameter, adddressParameter, inquirytypeParameter, cityParameter, stateParameter, callmeParameter);
        }
    
        public virtual ObjectResult<CheckConfigurationsales_Result> CheckConfigurationsales(Nullable<System.DateTime> saledate, Nullable<int> storeid)
        {
            var saledateParameter = saledate.HasValue ?
                new ObjectParameter("saledate", saledate) :
                new ObjectParameter("saledate", typeof(System.DateTime));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckConfigurationsales_Result>("CheckConfigurationsales", saledateParameter, storeidParameter);
        }
    
        public virtual ObjectResult<Get_statusCode_Result> Get_statusCode(string startDate)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_statusCode_Result>("Get_statusCode", startDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GettotalAmount(string saledate, Nullable<int> storeid)
        {
            var saledateParameter = saledate != null ?
                new ObjectParameter("saledate", saledate) :
                new ObjectParameter("saledate", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GettotalAmount", saledateParameter, storeidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Insert_SalesGeneralEntries(Nullable<int> storeid, Nullable<int> userid, string salesdate, Nullable<decimal> totalamount)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("Storeid", storeid) :
                new ObjectParameter("Storeid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var salesdateParameter = salesdate != null ?
                new ObjectParameter("salesdate", salesdate) :
                new ObjectParameter("salesdate", typeof(string));
    
            var totalamountParameter = totalamount.HasValue ?
                new ObjectParameter("totalamount", totalamount) :
                new ObjectParameter("totalamount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Insert_SalesGeneralEntries", storeidParameter, useridParameter, salesdateParameter, totalamountParameter);
        }
    
        public virtual ObjectResult<tbl_otherdeposit_select_bystoreid_Result> tbl_otherdeposit_select_bystoreid(string date, Nullable<int> storeid)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_otherdeposit_select_bystoreid_Result>("tbl_otherdeposit_select_bystoreid", dateParameter, storeidParameter);
        }
    
        public virtual ObjectResult<tbl_otherdeposit_selectbystoreid_Result> tbl_otherdeposit_selectbystoreid(string date, Nullable<int> storeid)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_otherdeposit_selectbystoreid_Result>("tbl_otherdeposit_selectbystoreid", dateParameter, storeidParameter);
        }
    
        public virtual ObjectResult<GetUnassignShiftName_Result> GetUnassignShiftName(string date, Nullable<int> storeid)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnassignShiftName_Result>("GetUnassignShiftName", dateParameter, storeidParameter);
        }
    
        public virtual ObjectResult<Get_UniqueTendersInDrawer_Result> Get_UniqueTendersInDrawer(Nullable<int> storeid)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_UniqueTendersInDrawer_Result>("Get_UniqueTendersInDrawer", storeidParameter);
        }
    
        public virtual int Insert_Configuration(Nullable<int> dept_id, Nullable<int> store_id, Nullable<int> group_id, string memo, Nullable<int> typicalbalid, string title)
        {
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var store_idParameter = store_id.HasValue ?
                new ObjectParameter("Store_id", store_id) :
                new ObjectParameter("Store_id", typeof(int));
    
            var group_idParameter = group_id.HasValue ?
                new ObjectParameter("Group_id", group_id) :
                new ObjectParameter("Group_id", typeof(int));
    
            var memoParameter = memo != null ?
                new ObjectParameter("Memo", memo) :
                new ObjectParameter("Memo", typeof(string));
    
            var typicalbalidParameter = typicalbalid.HasValue ?
                new ObjectParameter("typicalbalid", typicalbalid) :
                new ObjectParameter("typicalbalid", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Configuration", dept_idParameter, store_idParameter, group_idParameter, memoParameter, typicalbalidParameter, titleParameter);
        }
    
        public virtual ObjectResult<tbl_Groupname_Search_Result> tbl_Groupname_Search(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Groupname_Search_Result>("tbl_Groupname_Search", nameParameter);
        }
    
        public virtual int tbl_SalesGeneralEntries_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_SalesGeneralEntries_Delete", idParameter);
        }
    
        public virtual int tbl_SalesGeneralEntries_updateposno(Nullable<int> id, Nullable<int> noofpos)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var noofposParameter = noofpos.HasValue ?
                new ObjectParameter("noofpos", noofpos) :
                new ObjectParameter("noofpos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_SalesGeneralEntries_updateposno", idParameter, noofposParameter);
        }
    
        public virtual int tbl_ChildSalesEntries_updatedata(Nullable<int> id, string memo, Nullable<int> typicalid, string title)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var memoParameter = memo != null ?
                new ObjectParameter("memo", memo) :
                new ObjectParameter("memo", typeof(string));
    
            var typicalidParameter = typicalid.HasValue ?
                new ObjectParameter("typicalid", typicalid) :
                new ObjectParameter("typicalid", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_ChildSalesEntries_updatedata", idParameter, memoParameter, typicalidParameter, titleParameter);
        }
    
        public virtual ObjectResult<tbl_Excelread_Errormsg_insert_Result> tbl_Excelread_Errormsg_insert(Nullable<int> excelid, Nullable<int> rowNo, Nullable<int> columnNo, string errorMessage)
        {
            var excelidParameter = excelid.HasValue ?
                new ObjectParameter("Excelid", excelid) :
                new ObjectParameter("Excelid", typeof(int));
    
            var rowNoParameter = rowNo.HasValue ?
                new ObjectParameter("RowNo", rowNo) :
                new ObjectParameter("RowNo", typeof(int));
    
            var columnNoParameter = columnNo.HasValue ?
                new ObjectParameter("ColumnNo", columnNo) :
                new ObjectParameter("ColumnNo", typeof(int));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_Excelread_Errormsg_insert_Result>("tbl_Excelread_Errormsg_insert", excelidParameter, rowNoParameter, columnNoParameter, errorMessageParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_ExcelRead_insert(Nullable<System.DateTime> excelreadate, Nullable<System.DateTime> createdDate, string filename)
        {
            var excelreadateParameter = excelreadate.HasValue ?
                new ObjectParameter("Excelreadate", excelreadate) :
                new ObjectParameter("Excelreadate", typeof(System.DateTime));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_ExcelRead_insert", excelreadateParameter, createdDateParameter, filenameParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_PaidOut_insert(Nullable<int> activitySalesid, string title, Nullable<decimal> amount, string createdby, Nullable<System.DateTime> createdDate, string updatedby, Nullable<System.DateTime> updatedDate, Nullable<bool> isActive)
        {
            var activitySalesidParameter = activitySalesid.HasValue ?
                new ObjectParameter("ActivitySalesid", activitySalesid) :
                new ObjectParameter("ActivitySalesid", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("createdDate", createdDate) :
                new ObjectParameter("createdDate", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby != null ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(string));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("updatedDate", updatedDate) :
                new ObjectParameter("updatedDate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_PaidOut_insert", activitySalesidParameter, titleParameter, amountParameter, createdbyParameter, createdDateParameter, updatedbyParameter, updatedDateParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> tbl_DepartmentNetSales_insert(Nullable<int> activitySalesid, string title, Nullable<decimal> amount, string createdby, Nullable<System.DateTime> createdDate, string updatedby, Nullable<System.DateTime> updatedDate, Nullable<bool> isActive)
        {
            var activitySalesidParameter = activitySalesid.HasValue ?
                new ObjectParameter("ActivitySalesid", activitySalesid) :
                new ObjectParameter("ActivitySalesid", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var createdbyParameter = createdby != null ?
                new ObjectParameter("createdby", createdby) :
                new ObjectParameter("createdby", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("createdDate", createdDate) :
                new ObjectParameter("createdDate", typeof(System.DateTime));
    
            var updatedbyParameter = updatedby != null ?
                new ObjectParameter("updatedby", updatedby) :
                new ObjectParameter("updatedby", typeof(string));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("updatedDate", updatedDate) :
                new ObjectParameter("updatedDate", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("tbl_DepartmentNetSales_insert", activitySalesidParameter, titleParameter, amountParameter, createdbyParameter, createdDateParameter, updatedbyParameter, updatedDateParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<GeneralEntryDetail_Result> GeneralEntryDetail(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeneralEntryDetail_Result>("GeneralEntryDetail", idParameter);
        }
    
        public virtual ObjectResult<sp_getTenderAccountsStoreWise_Result> sp_getTenderAccountsStoreWise(Nullable<int> storeId)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("storeId", storeId) :
                new ObjectParameter("storeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getTenderAccountsStoreWise_Result>("sp_getTenderAccountsStoreWise", storeIdParameter);
        }
    
        public virtual ObjectResult<GetTotalNetSalesTaxAmount_Result> GetTotalNetSalesTaxAmount(string saledate, Nullable<int> storeid)
        {
            var saledateParameter = saledate != null ?
                new ObjectParameter("saledate", saledate) :
                new ObjectParameter("saledate", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalNetSalesTaxAmount_Result>("GetTotalNetSalesTaxAmount", saledateParameter, storeidParameter);
        }
    
        public virtual ObjectResult<GetTilteWiseSaleslist_Result> GetTilteWiseSaleslist(string saledate, Nullable<int> storeid)
        {
            var saledateParameter = saledate != null ?
                new ObjectParameter("saledate", saledate) :
                new ObjectParameter("saledate", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTilteWiseSaleslist_Result>("GetTilteWiseSaleslist", saledateParameter, storeidParameter);
        }
    
        public virtual ObjectResult<tbl_SalesGeneralEntries_select_Result> tbl_SalesGeneralEntries_select(Nullable<int> storeid, Nullable<System.DateTime> salesdate)
        {
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var salesdateParameter = salesdate.HasValue ?
                new ObjectParameter("salesdate", salesdate) :
                new ObjectParameter("salesdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbl_SalesGeneralEntries_select_Result>("tbl_SalesGeneralEntries_select", storeidParameter, salesdateParameter);
        }
    
        public virtual ObjectResult<GetPaidOutTotal_Shiftwisereportbyterminalid_Result> GetPaidOutTotal_Shiftwisereportbyterminalid(Nullable<int> storeId, string transactionStartTime, Nullable<int> terminalid)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var terminalidParameter = terminalid.HasValue ?
                new ObjectParameter("terminalid", terminalid) :
                new ObjectParameter("terminalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPaidOutTotal_Shiftwisereportbyterminalid_Result>("GetPaidOutTotal_Shiftwisereportbyterminalid", storeIdParameter, transactionStartTimeParameter, terminalidParameter);
        }
    
        public virtual ObjectResult<GetSalesAmountTotalbyTerminalID_Result> GetSalesAmountTotalbyTerminalID(Nullable<int> storeId, string transactionStartTime, Nullable<int> terminalid)
        {
            var storeIdParameter = storeId.HasValue ?
                new ObjectParameter("StoreId", storeId) :
                new ObjectParameter("StoreId", typeof(int));
    
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var terminalidParameter = terminalid.HasValue ?
                new ObjectParameter("terminalid", terminalid) :
                new ObjectParameter("terminalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesAmountTotalbyTerminalID_Result>("GetSalesAmountTotalbyTerminalID", storeIdParameter, transactionStartTimeParameter, terminalidParameter);
        }
    
        public virtual ObjectResult<GetTotalCustomercount_byterminalid_Result> GetTotalCustomercount_byterminalid(string transactionStartTime, Nullable<int> storeid, Nullable<int> terminalid)
        {
            var transactionStartTimeParameter = transactionStartTime != null ?
                new ObjectParameter("TransactionStartTime", transactionStartTime) :
                new ObjectParameter("TransactionStartTime", typeof(string));
    
            var storeidParameter = storeid.HasValue ?
                new ObjectParameter("storeid", storeid) :
                new ObjectParameter("storeid", typeof(int));
    
            var terminalidParameter = terminalid.HasValue ?
                new ObjectParameter("terminalid", terminalid) :
                new ObjectParameter("terminalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalCustomercount_byterminalid_Result>("GetTotalCustomercount_byterminalid", transactionStartTimeParameter, storeidParameter, terminalidParameter);
        }
    }
}
