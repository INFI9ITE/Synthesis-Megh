@model IEnumerable<wwwroot.Areas.Admin.Models.Store_Create>
@{

    Layout = null;
}
<style>
    .divIDClass {
        z-index: 999999 !important;
    }
</style>

<div class="animate-panelmessesgarea padbtmzero">

    @*<script type="text/javascript" src='~/Content/Admin/vendor/jquery/dist/jquery.min.js'></script>
        <script type="text/javascript" src="~/Content/Admin/assets/js/toastr/toastr.min.js"></script>*@
    @if (ViewBag.StatusMessage.ToString() == "Success")
    {
        <script>
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "3000",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "10000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }

            toastr.success('Store created Successfully');
        </script>
    }
    @if (ViewBag.StatusMessage.ToString() == "Delete")
    {
        <script>
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "3000",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "10000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr.success('Store deleted Successfully');
        </script>
    }
    @if (ViewBag.StatusMessage.ToString() == "Edit")
    {
        <script>
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "3000",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "10000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }

            toastr.success('Store updated Successfully');
        </script>
    }
    @if (ViewBag.StatusMessage.ToString() == "Exists")
    {
        <script>
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "3000",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "10000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr.success('Store with this name is already exists.');
        </script>
    }
    @if (ViewBag.StatusMessage.ToString() == "Error")
    {
        <script>
            MyfunError();
        </script>
    }
    @if (ViewBag.StatusMessage.ToString() == "NoItem")
    {
        <script>
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "3000",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "10000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr.success('No store Found');
        </script>
    }
    @if (Convert.ToString(ViewBag.StatusMessage) == "EmailExists")
    {
        <script>
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "3000",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "10000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr.success('Email Is already exists With Another Store.');
        </script>        
    }


</div>
<div id="grddata">
    <div class="page-body headertopbox addinvoice" style="padding-top:0px!important;">
        <div class="searchfinal">
            <div class="widget-body shadownone brdrgray">

                <div class="dataTables_wrapper form-inline dt-bootstrap no-footer">
                    <div class="dataTables_filter">
                        <table border="0" cellspacing="0" width="100%" style="text-align: right; margin-bottom: 0px;" cellpadding="0">

                            <tr>

                                @*<td width="145">
                                        <div class="input-group">
                                            @{
                                                List<SelectListItem> LstCtgry = new List<SelectListItem>();
                                                foreach (ddllist item in ViewBag.DataDept)
                                                {
                                                    LstCtgry.Add(new SelectListItem
                                                    {
                                                        Text = item.Text,
                                                        Value = Convert.ToString(item.Value)
                                                    });
                                                }
                                            }
                                            @Html.DropDownList("DrpLstDepartment", LstCtgry, "Select Department", new { @class = "myval" })
                                        </div>

                                    </td>*@

                                @*<td width="145">
                                        <div class="input-group">


                                            @{
                                                List<SelectListItem> LstCtgry2 = new List<SelectListItem>();
                                                foreach (ddllist item in ViewBag.Datadesig)
                                                {
                                                    LstCtgry2.Add(new SelectListItem
                                                    {
                                                        Text = item.Text,
                                                        Value = Convert.ToString(item.Value)
                                                    });
                                                }
                                            }
                                            @Html.DropDownList("DrpLstDesignation", LstCtgry2, "Select Designation", new { @class = "myval" })
                                        </div>

                                    </td>*@
                                <td width="265">
                                    <div class="input-group postion_div">
                                        <input name="txtSearchTitle" type="text" maxlength="100" id="txtSearchTitle" placeholder="Store Name" class="form-control m-b">
                                        <a href="#" class="search_close" onclick="cleartextsearch();">x</a>
                                    </div>
                                    <div class="input-group">
                                        <input type="submit" name="btnSearch" value="Search" id="btnSearch" onclick="javascript:FunSearchRecord();" class=".searchfinal .btnsearchicon" />
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        @{if (Model.Count() > 0)
            {

                <div class="datagrid martop15">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th style="width:13%!important">Store Name</th>

                                    <th>Address</th>
                                    <th style="width:13%!important">Fax No.</th>
                                    <th style="width:13%!important">Phone No.</th>
                                    @*<th>Add Terminals</th>*@
                                    <th style="width:10%!important" class="text-right">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    foreach (var item in Model)
                                    {

                                        <tr class="even">
                                            <td style="vertical-align:middle;text-align:left;">@Html.Raw(item.Name)</td>
                                            <td style="vertical-align:middle;text-align:left; white-space:normal;">

                                                @{
                                                    var addresssata = item.Address;
                                                    if (!string.IsNullOrEmpty(item.Address2))
                                                    {
                                                        addresssata = item.Address + ", " + "</br/>" + item.Address2;
                                                    }
                                                    @Html.Raw(addresssata)
                                                }
                                            </td>
                                            <td style="vertical-align:middle;text-align:left;">@Html.Raw(item.FaxNo)</td>
                                            <td style="vertical-align:middle;text-align:left;">@Html.Raw(item.StoreNo)</td>
                                            @*<td style="vertical-align:middle;text-align:left;width:10%!important"><a href="@Url.Action("Create", "StoreTerminal", new { ID = item.Id })" data-toggle="tooltip" data-placement="top" data-original-title="Add Terminal">Add Terminal</a></td>*@
                                            <td style="vertical-align:middle;text-align:right" class="img_with img_color">
                                                <input type="hidden" id="ID" name="ID" value="@item.Id" />
                                                @*<a href="@Url.Action("edit", "Store", new { Id = item.Id})" class="edit" title="Edit" data-toggle="tooltip" data-placement="top" data-original-title="Edit"><img src="../Content/Admin/images/icons/icon_iconedit.png" alt="" /></a>*@ @*<a href="@Url.Action("edit", "Store", new { Id = item.Id})" class="edit" title="Edit" data-toggle="tooltip" data-placement="top" data-original-title="Edit"><img src="../Content/Admin/images/icons/icon_iconedit.png" alt="" /></a>*@ @*<a href="@Url.Action("edit", "Store", new { Id = item.Id})" class="edit" title="Edit" data-toggle="tooltip" data-placement="top" data-original-title="Edit"><img src="../Content/Admin/images/icons/icon_iconedit.png" alt="" /></a>*@
                                                <a href="@Url.Action("edit", "Store", new { Id = item.Id })" data-toggle="tooltip" data-placement="top" data-original-title="Edit"><img src="~/Content/Admin/images/edit-2.svg" alt="" /></a>

                                                @{
                                                    var UserIdD = @item.Id + "D";
                                                }

                                                <a href="#" onclick="return ComfirmDelete(@item.Id);" data-toggle="tooltip" data-placement="top" data-original-title="Delete"><img src="../Content/Admin/images/trash-2.svg" alt="" /> </a>
                                                @*<a class="detail" title="Detail" href="@Url.Action("detail", "Department", new { Id = @item.id ,Area = "Admin"})">
                                                        <i class="fa fa-link"></i>
                                                    </a>*@

                                                <div id="@UserIdD" class="divIDClass modal-popup modal-danger modal-message" style="position: fixed;  left:45%; width:300px; top: 10px; display:none">
                                                    <div class="modal-content ">
                                                        <div class="modal-header text-center">
                                                            <i class="glyphicon glyphicon-trash"></i>
                                                        </div>
                                                        <div class="modal-title">Message</div>
                                                        <div class="modal-body ">Are you sure want to delete this Store?</div>
                                                        <div class="modal-footer" style="text-align:center">
                                                            <a class="btn btn-danger" onclick="Delete(@item.Id);">Ok </a>
                                                            <a class="btn" data-dismiss="modal" onclick="closemodal()">Cancel</a>
                                                        </div>
                                                    </div>
                                                </div>

                                                <a href="@Url.Action("detail", "Store", new { Id = item.Id})" class="" title="Detail" data-toggle="tooltip" data-placement="top" data-original-title="Detail"><img src="~/Content/Admin/images/file-text.svg" alt="" /></a>



                                            </td>
                                        </tr>
                                                    }
                                }
                                <tr class="paginationGrid">
                                    <td class="left-text dataTables_length showdata" colspan="2" style="padding-top: 0px!important;">

                                        <div class="recordbox">

                                            <span class="selectbox">
                                                @{
                                                    List<SelectListItem> listItem_Records = new List<SelectListItem>();
                                                    string[] Records = wwwroot.Class.AdminSiteConfiguration.GetArrayForRecord().ToString().Split(',');
                                                    foreach (string word in Records)
                                                    {
                                                        listItem_Records.Add(new SelectListItem
                                                        {
                                                            Text = word.Split(':')[0],
                                                            Value = word.Split(':')[1]
                                                        });
                                                    }

                                                    @Html.DropDownList("SelectRecords", listItem_Records, new { @class = "myval", @onchange = "javascript:FunPageRecord(this.value);" })
                                                }
                                            </span><span class="text_record">Records</span>
                                        </div>
                                        <div class="showdatabox">
                                            <span style="float:left">Showing @ViewBag.startIndex to @ViewBag.endIndex of @ViewBag.TotalDataCount entries</span>
                                        </div>

                                    </td>
                                    <td colspan="6">

                                        <div class="pagination">
                                            @if (ViewBag.LastPageIndex > 1)
                                            {
                                                if (ViewBag.CurrentPageIndex != 1)
                                                {
                                                    <a id="btnPageFirst" style="cursor:pointer" onclick="javascript:FunPageIndex(1);" class=" Linkbutton firstpage nextbtn">First</a>
                                                    <a id="btnPagePrevious" style="cursor:pointer" onclick="javascript:FunPageIndex(@ViewBag.CurrentPageIndex    -1);" class=" Linkbutton Linkbutton prebtn">Previous</a>
                                                }
                                                int PageIndex = 3;
                                                int StartPageIndex = ViewBag.CurrentPageIndex - PageIndex;//10-3=7
                                                int EndPageIndex = ViewBag.CurrentPageIndex + PageIndex;//10+3=13

                                                if (StartPageIndex < 1)
                                                {
                                                    EndPageIndex = EndPageIndex - StartPageIndex;
                                                }

                                                if (EndPageIndex > ViewBag.LastPageIndex)
                                                {
                                                    StartPageIndex = (StartPageIndex - (EndPageIndex - ViewBag.LastPageIndex)) + 1;
                                                }

                                                for (int i = 1; i <= @ViewBag.LastPageIndex; i++)
                                                {

                                                    if ((StartPageIndex < i && EndPageIndex > i))
                                                    {
                                                        if (ViewBag.CurrentPageIndex == i)
                                                        {
                                                            <span Style="min-width: 25px; display: inline-block;">@i          </span>
                                                        }
                                                        else
                                                        {
                                                            <a id="btnnum" style="cursor:pointer" onclick="javascript:FunPageIndex(@i);">@i</a>
                                                        }
                                                    }
                                                }
                                                if (ViewBag.CurrentPageIndex != @ViewBag.LastPageIndex)
                                                {
                                                    <a id="btnPageNext" style="cursor:pointer" onclick="javascript:FunPageIndex(@ViewBag.CurrentPageIndex    +1);" class=" Linkbutton nextbtn">Next</a>
                                                    <a id="btnPageLast" style="cursor:pointer" onclick="javascript:FunPageIndex(@ViewBag.LastPageIndex);" class=" Linkbutton lastpage nextbtn">Last</a>
                                                }
                                            }
                                        </div>
                                    </td>
                                </tr>

                            </tbody>
                        </table>
                    </div>
                </div>

                                                    }
        }
    </div>
</div>










<script>
    $(document).ready(function () {

        $("#txtSearchTitle").focus();
        // $('#ddlclass option[value=2]').attr("selected", true);

        //document.getElementById("ddlclass").selectedIndex = 2


    });

</script>

<script>

    function cleartextsearch()
    {
        document.getElementById('txtSearchTitle').value='';
        FunSearchRecord();
    }

    var top=0;
    function Loader(val)
    {
        var doc = document.documentElement;
        $("[data-toggle=tooltip]").tooltip();
        if(val==1){
            $("#secloader").removeClass('pace-active1');
            $("#secloader").addClass('pace-active');
            $("#dvloader").removeClass('bak1');
            $("#dvloader").addClass('bak');
            $("#globalFooter").addClass('LoaderFooter');
            top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);
        }
        else{
            $("#secloader").removeClass('pace-active');
            $("#secloader").addClass('pace-active1');
            $("#dvloader").removeClass('bak');
            $("#dvloader").addClass('bak1');
            $("#globalFooter").removeClass('LoaderFooter');
            doc.scrollTop=top;
        }
        bind();
    }

    function FunPageIndex(pageindex)//grid pagination
    {

        GetData(0,pageindex, '@ViewBag.OrderByVal',@ViewBag.IsAscVal,@ViewBag.PageSize,'@ViewBag.Alpha',@ViewBag.SearchRecords,'@ViewBag.SearchTitle');
    }

    function FunSortData(SortData)//Grid header sorting
    {
        GetData(0,@ViewBag.CurrentPageIndex, SortData,@ViewBag.AscVal,@ViewBag.PageSize,'@ViewBag.Alpha',@ViewBag.SearchRecords,'@ViewBag.SearchTitle');
    }

    function FunPageRecord(PageRecord)//Grid Page per record
    {

        GetData(0,1, '@ViewBag.OrderByVal',@ViewBag.IsAscVal,PageRecord,'@ViewBag.Alpha',@ViewBag.SearchRecords,'@ViewBag.SearchTitle');
    }

    function FunAlphaSearchRecord(alpha)//Alpha Search
    {
        GetData(1,1,'@ViewBag.OrderByVal',@ViewBag.IsAscVal,@ViewBag.PageSize,alpha,@ViewBag.SearchRecords,'');
    }
    //For Search Button
    function FunSearchRecord()//Search
    {

        var element_txtSearchTitle = document.getElementById('txtSearchTitle').value;

        GetData(1,1,'@ViewBag.OrderByVal',@ViewBag.IsAscVal,@ViewBag.PageSize,'','',element_txtSearchTitle);

    }

    function GetData(IsBindData_val,PageIndex,orderby_val,isAsc_val,PageSize_val,alpha_val,SearchRecords_val,SearchTitle_val)
    {

        $.ajax({
            url: '@wwwroot.Class.AdminSiteConfiguration.GetURL()/Admin/Store/grid',
            data: {IsBindData: IsBindData_val, currentPageIndex: PageIndex,orderby:orderby_val.trim(),IsAsc:isAsc_val,PageSize:PageSize_val,SearchRecords:SearchRecords_val,Alpha:alpha_val,SearchTitle:SearchTitle_val },
            beforeSend: function () { Loader(1); },
            // async: false,
            success: function (response) {

                //    $("body").html(response);
                $('#grddata').empty();
                $('#grddata').append(response);
                Loader(0);
            }
        });
    }


    document.getElementById('txtSearchTitle').onkeypress=function(e){
        if(e.keyCode==13){
            document.getElementById('btnSearch').click();
        }
    }
    function bind() {
        $(".myval").select2({
            //placeholder: "select",
            allowclear: true,
            //minimumResultsForSearch: -1
        });

        if(document.getElementById('SelectRecords')!=null)
        {
            document.getElementById('SelectRecords').value = @ViewBag.PageSize;
        }
        document.getElementById('txtSearchTitle').value = "@ViewBag.SearchTitle";


    }
     function ComfirmDelete(ID)
     {
         var DivId="#"+ID+"D";
         $(DivId).show();
        @*var check = confirm("Are you sure you want to Delete this record?");
        if (check == true) {
            Delete(ID);
            GetData(1,@ViewBag.CurrentPageIndex,  '@ViewBag.OrderByVal',@ViewBag.IsAscVal,@ViewBag.PageSize,'@ViewBag.Alpha',@ViewBag.SearchRecords,'@ViewBag.SearchTitle');
            return true;
        }
        else {
            return false;
        }*@
    }


    function Delete(ID)
    {

        $.ajax({
            url: '@wwwroot.Class.AdminSiteConfiguration.GetURL()/admin/Store/delete',
            data: { Id: ID},
            async: false,
            success: function (response) {

                GetData(1,@ViewBag.CurrentPageIndex,'@ViewBag.OrderByVal',@ViewBag.IsAscVal,@ViewBag.PageSize,'@ViewBag.Alpha',@ViewBag.SearchRecords,'@ViewBag.SearchTitle');
                //return true;
            },
            error:function()
            {
                //return false;
            }
        });
    }

    function closemodal(){
        $(".divIDClass").hide();
    }

</script>
